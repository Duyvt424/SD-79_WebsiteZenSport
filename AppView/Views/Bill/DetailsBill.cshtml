@model List<AppView.Models.DetailsBillViewModel.OrderDetailsViewModel>
@{
	ViewData["Title"] = "Chi tiết đơn hàng";
}
@{
	var status = Model.First().OrderStatuses.First().Status;
	string statusText;

	switch (status)
	{
		case 0:
			statusText = "Chờ xác nhận";
			break;
		case 1:
			statusText = "Đã xác nhận thông tin thanh toán";
			break;
		case 2:
			statusText = "Đã bàn giao cho đơn vị vận chuyển";
			break;
		case 3:
			statusText = "Đã nhận được hàng";
			break;
		case 4:
			statusText = "Đã hủy đơn";
			break;
		default:
			statusText = "Không xác định";
			break;
	}
}
@{
	decimal totalPrice = Model.First().TotalPrice - Model.First().ShippingCost;
	decimal shippingCost = Model.First().ShippingCost;
	decimal priceVoucher = Model.First().PriceVoucher ?? 0;
	decimal totalAll = totalPrice + shippingCost - priceVoucher;
}
@inject IHttpContextAccessor HttpContextAccessor
@{
	var date = "a";
	var userName = HttpContextAccessor.HttpContext.Session.GetString("EmployeeID");
	string param1Value = "h";
	if (Context.Request.Query.ContainsKey("vnp_TransactionStatus"))
	{
		param1Value = Context.Request.Query["vnp_TransactionStatus"];
		date = Model.First().OrderStatuses.First().UpdateDate.ToString("HH:mm, dd/MM/yyyy");
	}
}
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Your Page Title</title>
	<link rel="stylesheet" href="~/assets/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/assets/css/lineicons.css" />
	<link rel="stylesheet" href="~/assets/css/materialdesignicons.min.css" />
	<link rel="stylesheet" href="~/assets/css/fullcalendar.css" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<style>
		body {
			background-color: whitesmoke;
		}

		.modal-box {
			font-family: 'Noto Sans', sans-serif;
		}

			.modal-box .show-modal {
				color: #fff;
				background-color: #ff773a;
				font-size: 18px;
				font-weight: 600;
				text-transform: capitalize;
				padding: 15px 30px;
				margin: 80px auto 0;
				border: none;
				border-radius: 0;
				box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
				outline: none;
				display: block;
				transition: all 0.3s ease 0s;
			}

				.modal-box .show-modal:hover,
				.modal-box .show-modal:focus {
					color: #fff;
					background-color: #555;
					outline: none;
				}

		.modal-backdrop.in {
			opacity: 0.4;
		}

		.modal-box .modal-dialog {
			width: 450px;
			margin: 50px auto 0;
		}

		.modal.fade .modal-dialog {
			transform: translateY(100px);
		}

		.modal.in .modal-dialog {
			transform: translate(0);
		}

		.modal-box .modal-dialog .modal-content {
			background: #fff;
			border-radius: 0;
			outline: 5px solid #fff;
			outline-offset: 10px;
		}

			.modal-box .modal-dialog .modal-content .close {
				color: #999;
				font-size: 28px;
				text-shadow: none;
				line-height: 15px;
				opacity: 1;
				overflow: hidden;
				position: absolute;
				left: auto;
				right: 15px;
				top: 15px;
				z-index: 1;
				transition: all 0.3s;
			}

				.modal-box .modal-dialog .modal-content .close:hover {
					color: #555;
				}

			.modal-box .modal-dialog .modal-content .modal-body {
				padding: 40px !important;
			}

				.modal-box .modal-dialog .modal-content .modal-body .title {
					color: #111;
					font-size: 25px;
					font-weight: 700;
					text-transform: capitalize;
					margin: 0 0 20px;
				}

				.modal-box .modal-dialog .modal-content .modal-body .description {
					color: #999;
					font-size: 17px;
					font-weight: 500;
					margin: 0 5px 25px;
				}

				.modal-box .modal-dialog .modal-content .modal-body .form-group {
					margin: 0 0 25px;
				}

					.modal-box .modal-dialog .modal-content .modal-body .form-group label {
						font-size: 16px;
						font-weight: 500;
					}

					.modal-box .modal-dialog .modal-content .modal-body .form-group .form-control {
						height: 50px;
						border-radius: 0;
						border-color: #777;
					}

						.modal-box .modal-dialog .modal-content .modal-body .form-group .form-control:focus {
							box-shadow: none;
							border-color: #ff773a;
						}

				.modal-box .modal-dialog .modal-content .modal-body .btn {
					color: #fff;
					background: #ff773a;
					font-size: 18px;
					font-weight: 600;
					text-transform: capitalize;
					letter-spacing: 1px;
					padding: 14px 20px 13px;
					border-radius: 5px;
					transition: all 0.3s;
				}

					.modal-box .modal-dialog .modal-content .modal-body .btn:hover {
						text-shadow: 3px 3px 3px rgba(0, 0, 0, .5);
						box-shadow: 3px 3px 3px rgba(0, 0, 0, .5);
					}

					.modal-box .modal-dialog .modal-content .modal-body .btn:focus {
						outline: none;
					}

		.modal-box1 {
			font-family: 'Lato', sans-serif;
		}

			.modal-box1 .show-modal {
				color: #fff;
				background-color: #282828;
				font-size: 18px;
				font-weight: 600;
				text-transform: capitalize;
				padding: 10px 15px;
				margin: 80px auto 0;
				border: none;
				outline: none;
				border-radius: 20px 50px/50px 20px;
				display: block;
				transition: all 0.3s ease 0s;
			}

				.modal-box1 .show-modal:hover {
					color: #282828;
					background: transparent;
					border: none;
					box-shadow: 0 0 15px rgba(0, 0, 0, 0.9);
				}

				.modal-box1 .show-modal:focus {
					outline: none;
				}

		.modal-backdrop.in {
			opacity: 0;
		}

		.modal-box1 .modal-dialog {
			width: 450px;
			margin: 100px auto 0;
		}

			.modal-box1 .modal-dialog .modal-content {
				color: #3c3c3c;
				background: #e9e9e9;
				text-align: center;
				border: none;
				border-radius: 0;
				box-shadow: none;
				overflow: hidden;
				position: relative;
			}

				.modal-box1 .modal-dialog .modal-content:before {
					content: '';
					width: 100%;
					height: calc(100% + 20px);
					border-top: 16px dotted #72BCC9;
					border-bottom: 16px dotted #72BCC9;
					position: absolute;
					top: -10px;
					bottom: -10px;
					left: 0;
				}

				.modal-box1 .modal-dialog .modal-content .close {
					color: #fff;
					background: #72BCC9;
					font-size: 25px;
					text-shadow: none;
					line-height: 23px;
					height: 25px;
					width: 24px;
					opacity: 1;
					border-radius: 50px;
					position: absolute;
					left: auto;
					right: 10px;
					top: 15px;
					z-index: 1;
					transition: all 0.3s ease;
				}

					.modal-box1 .modal-dialog .modal-content .close span {
						margin: -2px 0 0;
						display: block;
					}

					.modal-box1 .modal-dialog .modal-content .close:hover {
						color: #fff;
						box-shadow: 0 0 10px -5px rgba(0,0,0,0.9);
					}

					.modal-box1 .modal-dialog .modal-content .close:focus {
						outline: none;
					}

				.modal-box1 .modal-dialog .modal-content .modal-body {
					padding: 30px 25px !important;
				}

					.modal-box1 .modal-dialog .modal-content .modal-body .title {
						font-family: 'Amaranth', sans-serif;
						font-size: 30px;
						font-weight: 500;
						font-style: italic;
						padding: 0 0 20px 0;
						margin: 0 0 15px 0;
						border-bottom: 2px dotted #d5d5d5;
					}

					.modal-box1 .modal-dialog .modal-content .modal-body .description {
						color: #8c8c8c;
						font-size: 17px;
						letter-spacing: 1px;
						;
						margin: 0 0 20px;
					}

					.modal-box1 .modal-dialog .modal-content .modal-body .btn {
						color: #fff;
						background: linear-gradient(to bottom, #ba4040, #a52929);
						font-size: 16px;
						font-weight: 600;
						text-transform: uppercase;
						letter-spacing: 2px;
						width: 130px;
						padding: 10px 0;
						margin: 0 10px 10px 0;
						border: 1px solid #7a0909;
						border-radius: 5px;
						display: inline-block;
						transition: all 0.3s ease 0s;
					}

						.modal-box1 .modal-dialog .modal-content .modal-body .btn.cancel {
							background: linear-gradient(to bottom, #8da556, #748f3e);
							margin-right: 0;
							border-color: #4b641a;
						}

						.modal-box1 .modal-dialog .modal-content .modal-body .btn:hover {
							text-shadow: 5px 5px 0 rgba(0,0,0,0.4);
							box-shadow: 0 0 10px rgba(0,0,0,0.5);
						}
	</style>
</head>
<link rel="stylesheet" href="~/css/detailsBill.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pixeden-stroke-7-icon@1.2.3/pe-icon-7-stroke/dist/pe-icon-7-stroke.min.css">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
<div class="container-fluid padding-bottom-3x mb-1" style="margin-top: 3%;">
	<div class="card mb-3">
		<div class="p-4 text-center text-white text-lg bg-dark rounded-top"><span class="text-uppercase">MÃ	ĐƠN HÀNG:  </span><span class="text-medium" style="padding-left:1%;"> @Model.First().BillCode</span></div>
		<div class="d-flex flex-wrap flex-sm-nowrap justify-content-between py-3 px-2 bg-secondary">
			<div class="w-100 text-center py-1 px-2" style="display:none;"><span class="text-medium">Shipped Via:</span> UPS Ground</div>
			<div class="w-100 text-center py-1 px-2" style="font-weight:bold;"><span class="text-medium">Trạng thái:</span> @statusText</div>
			<div class="w-100 text-center py-1 px-2" style="font-weight:bold;"><img src="~/image/icons8-date-25.png" alt="Date" /><span class="text-medium" style="padding-left:1%;">Ngày nhận hàng dự kiến:</span> @Model.First().OrderStatuses.First()?.SuccessDate.ToString("dd/MM/yyyy")</div>
		</div>
		<div class="card-body">
			<div class="steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x">
				@if (status == 0) // Trạng thái chờ xác nhận
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã xác nhận thông tin thanh toán</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đang vận chuyển</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã nhận được hàng</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 1)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đang vận chuyển</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã nhận được hàng</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 2)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed DeliveryDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title">Đang vận chuyển</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().DeliveryDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã nhận được hàng</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 3)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed DeliveryDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title">Đang vận chuyển</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().DeliveryDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed SuccessDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title">Đã nhận được hàng</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().SuccessDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 4)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed DeliveryDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title">Đang vận chuyển</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().DeliveryDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed SuccessDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title">Đã nhận được hàng</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().SuccessDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed CancelDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title">Hoàn trả</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CancelDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
				}
			</div>
			@if (userName != null && status == 0)
			{
				<a class="main-btn success-btn square-btn btn-hover show-modal" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;" data-toggle="modal" data-target="#myModal">Xác nhận</a>
				<a href="#" class="main-btn danger-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px;">Hủy đơn</a>
				<a href="#" class="main-btn active-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-right:5%;">Chi tiết</a>
			}
			@if (userName != null && status == 1)
			{
				<a class="main-btn success-btn square-btn btn-hover show-modal-delivery" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;" data-toggle="modal" data-target="#myModal">Giao hàng</a>
				<a href="#" class="main-btn danger-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px;">Hủy đơn</a>
				<a href="#" class="main-btn active-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-right:5%;">Chi tiết</a>
			}
			@if (userName != null && status == 2)
			{
				<a href="#" class="main-btn danger-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;">Hủy đơn</a>
				@if (Model.First().IsPaid == true)
				{
					<a class="main-btn success-btn square-btn btn-hover show-modal-success" style="font-size:16px; padding:5px 10px; margin:2px;" data-toggle="modal" data-target="#myModal">Hoàn thành</a>
				}
				<a href="#" class="main-btn active-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-right:5%;">Chi tiết</a>
			}
			@if (userName != null && status == 3)
			{
				<a href="#" class="main-btn active-btn square-btn btn-hover" style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-right:5%;">Chi tiết</a>
			}
		</div>
	</div>
	<div class="d-flex flex-wrap flex-md-nowrap justify-content-center justify-content-sm-between align-items-center">
		<div class="text-left text-sm-right" style="display:none;"><a class="btn btn-outline-primary btn-rounded btn-sm" href="orderDetails" data-toggle="modal" data-target="#orderDetails">View Order Details</a></div>
	</div>
</div>
<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="myModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form>
						<h3 class="title">Xác nhận đơn hàng</h3>
						<div class="form-group">
							<label>Ghi chú</label>
							<input type="text" name="ghiChu" class="form-control">
							<input id="idBill" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						</div>
						<button class="btn" type="submit">Xác nhận</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="myModal1" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form>
						<h3 class="title">Xác nhận giao hàng</h3>
						<div class="form-group">
							<label>Ghi chú</label>
							<input type="text" name="ghiChu1" class="form-control">
							<input id="idBill1" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						</div>
						<button class="btn" type="submit">Xác nhận</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="myModal2" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form>
						<h3 class="title">Xác nhận hoàn thành</h3>
						<div class="form-group">
							<label>Ghi chú</label>
							<input type="text" name="ghiChu2" class="form-control">
							<input id="idBill2" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						</div>
						<button class="btn" type="submit">Xác nhận</button>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="modal-box1">
	<!-- Modal -->
	<div class="modal fade" id="myModalConfirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content clearfix">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
				<form>
					<div class="modal-body">
						<h3 class="title">Xác nhận thanh toán</h3>
						<input id="idBillSuccess" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						<p class="description">Xác nhận thanh toán cho đơn hàng [@Model.First().BillCode] + số tiền [@totalAll.ToString("N0")đ] bằng hình thức thanh toán:</p>
						<button class="btn" type="submit" value="Thanh toán khi nhận hàng" name="httt">Trực tiếp</button>
						<button class="btn cancel" type="submit" value="Thanh toán trực tuyến VNPay" name="httt">Online</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<script>
	$(document).ready(function () {
		$('.xac-nhan-tt').click(function () {
			$('#myModalConfirm').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModalConfirm').modal('hide');
		});

		var selectedPaymentMethod = ''; // Biến để lưu trữ giá trị của button được chọn

		// Bắt sự kiện click trên các button
		$('.btn').click(function () {
			selectedPaymentMethod = $(this).val(); // Lưu giá trị của button được chọn
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();
			var idBill = $('#idBillSuccess').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveSuccessBill", "BillStatusHistory")',
				type: 'POST',
				data: { idBill: idBill, httt: selectedPaymentMethod },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModalConfirm').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
					}
				},
				error: function (error) {
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal').click(function () {
			$('#myModal').modal('show');
		});

		// Đóng modal khi click nút "non numquam" hoặc nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModal').modal('hide');
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();

			var ghiChu = $('input[name="ghiChu"]').val();
			var idBill = $('#idBill').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveStatusBill", "BillStatusHistory")',
				type: 'POST',
				data: { ghiChu: ghiChu, idBill: idBill },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModal').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
						alert(response.message);
					}
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal-delivery').click(function () {
			$('#myModal1').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModal1').modal('hide');
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();

			var ghiChu = $('input[name="ghiChu1"]').val();
			var idBill = $('#idBill1').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveStatusBill1", "BillStatusHistory")',
				type: 'POST',
				data: { ghiChu: ghiChu, idBill: idBill },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModal1').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
						alert(response.message);
					}
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal-success').click(function () {
			$('#myModal2').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModal2').modal('hide');
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();

			var ghiChu = $('input[name="ghiChu2"]').val();
			var idBill = $('#idBill2').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveStatusBill2", "BillStatusHistory")',
				type: 'POST',
				data: { ghiChu: ghiChu, idBill: idBill },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModal2').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
						alert(response.message);
					}
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<div class="container col-md-12">
	<div class="card mb-7" style="border: 1px solid white;">
		<div class="card-header py-3">
			<h5 class="mb-0">Sản phẩm</h5>
		</div>
		<div class="card-body">
			<!-- Single item -->
			@foreach (var item in Model)
			{
				<div class="row">
					<div class="col-lg-3 col-md-8 mb-4 mb-lg-0">
						<!-- Image -->
						<div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
							<img src="@Url.Content("~/image/" + item.Products.First().ImageUrl)" class="w-80" alt="Blue Jeans Jacket" />
							<a href="#!">
								<div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
							</a>
						</div>
						<!-- Image -->
					</div>
					<div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
						<!-- Data -->
						<p><strong style="font-size:20px;">@item.Products.First().Name</strong></p>
						<p style="font-size:20px; padding-top:1%;">@item.Products.First().Description</p>
						<p style="font-size:20px; padding-top:1%;">Size: @item.Products.First().Size</p>
						<p style="font-size:20px; padding-top:1%;">Số lượng: x@(item.Products.First().Quantity)</p>
						<!-- Button to remove cart item -->
						<button type="button" class="btn btn-primary btn-sm me-1 mb-2" data-mdb-toggle="tooltip"
							title="Xóa sản phẩm">
							<i class="fas fa-trash" style="padding-top:1%;"></i>
						</button>

					</div>
					<div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
						<!-- Total Price -->
						<p class="text-start text-md-center">
							<span class="main-btn secondary-btn rounded-full btn-hover" style="font-size:16px; padding:5px 10px; margin:2px; margin-top: 45%;">@item.Products.First().Price.ToString("N0")đ</span>
						</p>
						<!-- Total Price -->
					</div>
					<hr class="my-4" style="width:98%;" />
				</div>
			}
			<div style="text-align: right;">
				<ul style="margin-left: auto;">
					<li class="">
						Tổng giá sản phẩm:
						<span class="cart-total-sub" id="totalPrice" style="padding: 5px 10px; margin: 2px; margin-left: 13.5%;">@totalPrice.ToString("N0")đ</span>
					</li>
					<li class="">
						Phí vận chuyển:
						<span id="phivanchuyen" style="padding: 5px 10px; margin: 2px; margin-left: 17%;">+ @shippingCost.ToString("N0")đ</span>
					</li>
					<li class="">
						Giảm giá:
						@if (Model.First().PriceVoucher != null)
						{
							<span id="giamgia" style="padding: 5px 10px; margin: 2px; margin-left: 20%;">- @string.Format("{0:N0}đ", priceVoucher)</span>
						}
						else
						{
							<span id="giamgia" style="padding: 5px 10px; margin: 2px; margin-left: 20%;">0đ</span>
						}
					</li>
					<li class="">
						Tổng
						<span class="cart-total-sub" id="totalPrice" style="padding: 5px 10px; margin: 2px; margin-left: 21.5%;">= @totalAll.ToString("N0")đ</span>
					</li>
				</ul>
			</div>
			<!-- Single item -->
		</div>
	</div>
	<div class="row" id="shipping-address-form-container" style="margin-top:5%;">
		<div class="container col-md-12 mb-6">
			<div class="card mb-6">
				<div class="card-header py-3">
					<h5 class="mb-0">THÔNG TIN ĐƠN HÀNG</h5>
					@if (userName != null && Model.First().IsPaid == false)
					{
						<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn secondary-btn rounded-full btn-hover xac-nhan-tt" data-toggle="modal" data-target="#myModal">Xác nhận thanh toán</a>
					}
					@if (userName == null)
					{
						@if (@Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay" && status != 3)
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn secondary-btn rounded-full btn-hover thanh-toan">Thanh toán online</a>
						}
						else
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:left; margin-top:1%;" class="main-btn success-btn-light btn-hover">Đơn hàng đã được bạn thanh toán online vào lúc: @Model.First().OrderStatuses.First().UpdateDate.ToString("HH:mm, dd/MM/yyyy"), với số tiền: @totalAll.ToString("N0")đ</a>
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn secondary-btn rounded-full btn-hover">Đã thanh toán</a>
						}
					}
					@if (userName != null && Model.First().IsPaid == true)
					{
						@if (Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay")
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn success-btn-light btn-hover">Đơn hàng đã được thanh toán trực tiếp vào lúc: @Model.First().OrderStatuses.First().UpdateDate.ToString("HH:mm, dd/MM/yyyy"), với số tiền: @totalAll.ToString("N0")đ</a>
						}
						else
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn success-btn-light btn-hover">Đơn hàng đã được thanh toán online vào lúc: @Model.First().OrderStatuses.First().UpdateDate.ToString("HH:mm, dd/MM/yyyy"), với số tiền: @totalAll.ToString("N0")đ</a>
						}
					}
				</div>
				<div class="card-body existing-address" id="existingAddress" style="display:flex;">
					<div style="float:left;">
						<p style="font-size:16px;">Mã đơn hàng: <span style="font-weight:bold; margin-left:16%;"> @Model.First().BillCode</span></p>
						<p style="font-size:16px; padding-top:2%;">Trạng thái: <span style="font-size:16px; padding:5px 10px; margin:2px; margin-left:22%;" class="main-btn secondary-btn rounded-full btn-hover"> @statusText</span> </p>
						@if (@Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay")
						{
							<p style="font-size:16px; padding-top:2%;">Hình thức thanh toán: <span class="main-btn info-btn rounded-full btn-hover" style="font-size:16px; padding:5px 10px; margin:2px;"> @Model.First().PurchaseMethod</span></p>
						}
						else
						{
							<p style="font-size:16px; padding-top:2%;">Hình thức thanh toán: <span class="main-btn warning-btn rounded-full btn-hover" style="font-size:16px; padding:5px 10px; margin:2px;"> @Model.First().PurchaseMethod</span></p>
						}
					</div>
					<div style="margin-left:5%;">
						<p style="font-size:16px;">Họ và tên: <span style="font-weight:bold; margin-left:9%;"> @Model.First().FullName</span></p>
						<p style="font-size:16px; padding-top:2%;">Số điện thoại: <span style="font-weight:bold; margin-left:4.5%;"> @Model.First().PhoneNumber</span></p>
						<p style="font-size:16px; padding-top:2%;">Email: <span style="font-weight:bold; margin-left:13%;"> @Model.First().Email</span></p>
						<p style="font-size:16px; padding-top:2%;">Địa chỉ nhận hàng: <span style="font-weight:bold;"> @Model.First().Street, @Model.First().Ward, @Model.First().District, @Model.First().Province</span></p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script>
		var isPageReloaded = localStorage.getItem('isPageReloaded') === 'true';

		function saveStatusBill(billId1) {
			$.ajax({
				url: '@Url.Action("SaveStatusBill", "Bill")',
				type: 'POST',
				data: { billID: billId1 },
				success: function (response) {
					// Xử lý thành công nếu cần
				},
				error: function (xhr, textStatus, errorThrown) {
					// Xử lý lỗi nếu cần
				}
			});
		}

		var urlParams = new URLSearchParams(window.location.search);
		var vnpResponseCode = urlParams.get('vnp_ResponseCode');
		console.log('Trạng thái thanh toán là:', vnpResponseCode);

		// Kiểm tra nếu vnp_ResponseCode là '00' và trang chưa được load lại
		if (vnpResponseCode === '00' && !isPageReloaded) {
			var billID = '@Model.First().BillID.ToString()';
			saveStatusBill(billID);
			alert("Thanh toán thành công");
			// Đặt cờ isPageReloaded thành true để ngăn không cho load lại lần thứ 2
			localStorage.setItem('isPageReloaded', 'true');

			// Nếu có parameter trên URL và vnp_ResponseCode là '00', thì load lại trang sau một khoảng thời gian (ví dụ: 3 giây)
			setTimeout(function () {
				window.location.reload();
			}, 500);
		} else {
			// Nếu không phải trường hợp đặt đơn mới, đặt lại cờ để cho phép load lại khi đặt đơn mới tiếp theo
			localStorage.setItem('isPageReloaded', 'false');
		}

		//cái này bắt sự kiện khi bấm thanh toán online thì sẽ điều hướng đến trang thanh toán vnpay và sau đó là trở lại trang chi tiết đơn hàng
		$(".thanh-toan").on("click", function (event) {
			event.preventDefault();

			var totalPayment = @totalAll;
			var billID = '@Model.First().BillID.ToString()';
			var customerID = '@Model.First().CustomerId.ToString()';

			$.ajax({
				url: "https://localhost:7036/api/payment",
				method: "GET",
				data: { totalPayment: totalPayment, billID: billID, customerID: customerID },
				success: function (data) {
					// Chuyển hướng đến trang thanh toán nếu vnp_ResponseCode không phải '00'
					var urlParams = new URLSearchParams(window.location.search);
					var vnpResponseCode = urlParams.get('vnp_ResponseCode');

					if (vnpResponseCode !== '00') {
						window.location.href = data;
					}
				},
				error: function (error) {
					console.error("Error calling API:", error);
				}
			});
		});

	</script>
</div>