@using AppAPI.DTO;
@model List<AppView.Models.DetailsBillViewModel.OrderDetailsViewModel>
@{
	ViewData["Title"] = "Chi tiết đơn hàng";
	var selectedShippingMethodID = 0;
	var totalWeightShow = Model.First().Products.First().Quantity;
	var totalWeight = totalWeightShow * 500;
	var shoesDetails = ViewBag.shoesList as List<shoesDetailsDTO>;
}
@{
	var billStatusHis = Model.First().BillStatusHistories;
	var status = Model.First().OrderStatuses.First().Status;
	string statusText;

	switch (status)
	{
		case 0:
			statusText = "Chờ xác nhận";
			break;
		case 1:
			statusText = "Đã xác nhận thông tin thanh toán";
			break;
		case 2:
			statusText = "Đã bàn giao cho đơn vị vận chuyển";
			break;
		case 3:
			statusText = "Đã nhận được hàng";
			break;
		case 4:
			statusText = "Đã hủy đơn";
			break;
		default:
			statusText = "Không xác định";
			break;
	}
}
@{
	decimal totalPrice = Model.First().TotalPrice - Model.First().ShippingCost;
	decimal shippingCost = Model.First().ShippingCost;
	decimal priceVoucher = Model.First().PriceVoucher ?? 0;
	decimal totalAll = Model.First().TotalPriceAfterDiscount;
}
@inject IHttpContextAccessor HttpContextAccessor
@{
	var date = "a";
	var userName = HttpContextAccessor.HttpContext.Session.GetString("EmployeeID");
	string param1Value = "h";
	if (Context.Request.Query.ContainsKey("vnp_TransactionStatus"))
	{
		param1Value = Context.Request.Query["vnp_TransactionStatus"];
		date = Model.First().OrderStatuses.First().UpdateDate.ToString("HH:mm, dd/MM/yyyy");
	}
}
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Your Page Title</title>
	<link rel="stylesheet" href="~/assets/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/assets/css/lineicons.css" />
	<link rel="stylesheet" href="~/assets/css/materialdesignicons.min.css" />
	<link rel="stylesheet" href="~/assets/css/fullcalendar.css" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<link rel="stylesheet" href="~/css/detail.css" />
	<style>
		body {
			background-color: whitesmoke;
		}

		.modal-box {
			font-family: 'Noto Sans', sans-serif;
		}

			.modal-box .show-modal {
				color: #fff;
				background-color: #ff773a;
				font-size: 18px;
				font-weight: 600;
				text-transform: capitalize;
				padding: 15px 30px;
				margin: 80px auto 0;
				border: none;
				border-radius: 0;
				box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
				outline: none;
				display: block;
				transition: all 0.3s ease 0s;
			}

				.modal-box .show-modal:hover,
				.modal-box .show-modal:focus {
					color: #fff;
					background-color: #555;
					outline: none;
				}

		.modal-backdrop.in {
			opacity: 0.4;
		}

		.modal-box .modal-dialog {
			width: 650px;
			margin: 50px auto 0;
		}

		.modal.fade .modal-dialog {
			transform: translateY(100px);
		}

		.modal.in .modal-dialog {
			transform: translate(0);
		}

		.modal-box .modal-dialog .modal-content {
			background: #fff;
			border-radius: 0;
			outline: 5px solid #fff;
			outline-offset: 10px;
		}

			.modal-box .modal-dialog .modal-content .close {
				color: #999;
				font-size: 28px;
				text-shadow: none;
				line-height: 15px;
				opacity: 1;
				overflow: hidden;
				position: absolute;
				left: auto;
				right: 15px;
				top: 15px;
				z-index: 1;
				transition: all 0.3s;
			}

				.modal-box .modal-dialog .modal-content .close:hover {
					color: #555;
				}

			.modal-box .modal-dialog .modal-content .modal-body {
				padding: 40px !important;
			}

				.modal-box .modal-dialog .modal-content .modal-body .title {
					color: #111;
					font-size: 25px;
					font-weight: 700;
					text-transform: capitalize;
					margin: 0 0 20px;
				}

				.modal-box .modal-dialog .modal-content .modal-body .description {
					color: #999;
					font-size: 17px;
					font-weight: 500;
					margin: 0 5px 25px;
				}

				.modal-box .modal-dialog .modal-content .modal-body .form-group {
					margin: 0 0 25px;
				}

					.modal-box .modal-dialog .modal-content .modal-body .form-group label {
						font-size: 16px;
						font-weight: 500;
					}

					.modal-box .modal-dialog .modal-content .modal-body .form-group .form-control {
						height: 50px;
						border-radius: 0;
						border-color: #777;
					}

						.modal-box .modal-dialog .modal-content .modal-body .form-group .form-control:focus {
							box-shadow: none;
							border-color: #ff773a;
						}

				.modal-box .modal-dialog .modal-content .modal-body .btn {
					color: #fff;
					background: #ff773a;
					font-size: 18px;
					font-weight: 600;
					text-transform: capitalize;
					letter-spacing: 1px;
					padding: 14px 20px 13px;
					border-radius: 5px;
					transition: all 0.3s;
				}

					.modal-box .modal-dialog .modal-content .modal-body .btn:hover {
						text-shadow: 3px 3px 3px rgba(0, 0, 0, .5);
						box-shadow: 3px 3px 3px rgba(0, 0, 0, .5);
					}

					.modal-box .modal-dialog .modal-content .modal-body .btn:focus {
						outline: none;
					}

		.modal-box1 {
			font-family: 'Lato', sans-serif;
		}

			.modal-box1 .show-modal {
				color: #fff;
				background-color: #282828;
				font-size: 18px;
				font-weight: 600;
				text-transform: capitalize;
				padding: 10px 15px;
				margin: 80px auto 0;
				border: none;
				outline: none;
				border-radius: 20px 50px/50px 20px;
				display: block;
				transition: all 0.3s ease 0s;
			}

				.modal-box1 .show-modal:hover {
					color: #282828;
					background: transparent;
					border: none;
					box-shadow: 0 0 15px rgba(0, 0, 0, 0.9);
				}

				.modal-box1 .show-modal:focus {
					outline: none;
				}

		.modal-backdrop.in {
			opacity: 0;
		}

		.modal-box1 .modal-dialog {
			width: 450px;
			margin: 100px auto 0;
		}

			.modal-box1 .modal-dialog .modal-content {
				color: #3c3c3c;
				background: #e9e9e9;
				text-align: center;
				border: none;
				border-radius: 0;
				box-shadow: none;
				overflow: hidden;
				position: relative;
			}

				.modal-box1 .modal-dialog .modal-content:before {
					content: '';
					width: 100%;
					height: calc(100% + 20px);
					border-top: 16px dotted #72BCC9;
					border-bottom: 16px dotted #72BCC9;
					position: absolute;
					top: -10px;
					bottom: -10px;
					left: 0;
				}

				.modal-box1 .modal-dialog .modal-content .close {
					color: #fff;
					background: #72BCC9;
					font-size: 25px;
					text-shadow: none;
					line-height: 23px;
					height: 25px;
					width: 24px;
					opacity: 1;
					border-radius: 50px;
					position: absolute;
					left: auto;
					right: 10px;
					top: 15px;
					z-index: 1;
					transition: all 0.3s ease;
				}

					.modal-box1 .modal-dialog .modal-content .close span {
						margin: -2px 0 0;
						display: block;
					}

					.modal-box1 .modal-dialog .modal-content .close:hover {
						color: #fff;
						box-shadow: 0 0 10px -5px rgba(0,0,0,0.9);
					}

					.modal-box1 .modal-dialog .modal-content .close:focus {
						outline: none;
					}

				.modal-box1 .modal-dialog .modal-content .modal-body {
					padding: 30px 25px !important;
				}

					.modal-box1 .modal-dialog .modal-content .modal-body .title {
						font-family: 'Amaranth', sans-serif;
						font-size: 30px;
						font-weight: 500;
						font-style: italic;
						padding: 0 0 20px 0;
						margin: 0 0 15px 0;
						border-bottom: 2px dotted #d5d5d5;
					}

					.modal-box1 .modal-dialog .modal-content .modal-body .description {
						color: #8c8c8c;
						font-size: 17px;
						letter-spacing: 1px;
						;
						margin: 0 0 20px;
					}

					.modal-box1 .modal-dialog .modal-content .modal-body .btn {
						color: #fff;
						background: linear-gradient(to bottom, #ba4040, #a52929);
						font-size: 16px;
						font-weight: 600;
						text-transform: uppercase;
						letter-spacing: 2px;
						width: 130px;
						padding: 10px 0;
						margin: 0 10px 10px 0;
						border: 1px solid #7a0909;
						border-radius: 5px;
						display: inline-block;
						transition: all 0.3s ease 0s;
					}

						.modal-box1 .modal-dialog .modal-content .modal-body .btn.cancel {
							background: linear-gradient(to bottom, #8da556, #748f3e);
							margin-right: 0;
							border-color: #4b641a;
						}

						.modal-box1 .modal-dialog .modal-content .modal-body .btn:hover {
							text-shadow: 5px 5px 0 rgba(0,0,0,0.4);
							box-shadow: 0 0 10px rgba(0,0,0,0.5);
						}

		.main-timeline {
			font-family: 'Poppins', sans-serif;
		}

			.main-timeline:after {
				content: '';
				display: block;
				clear: both;
			}

			.main-timeline .timeline {
				width: calc(50% + 200px);
				margin: 0 0 25px 5px;
				float: right;
			}

			.main-timeline .timeline-content {
				color: #555;
				background: #fff;
				padding: 15px 15px 15px 290px;
				border-radius: 20px;
				box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);
				display: block;
				position: relative;
			}

				.main-timeline .timeline-content:hover {
					text-decoration: none;
				}

				.main-timeline .timeline-content:before {
					content: '';
					background-color: #00A7FB;
					height: 100%;
					width: 120px;
					position: absolute;
					left: 140px;
					top: 0;
				}

			.main-timeline .timeline-year {
				color: #00A7FB;
				font-size: 20px;
				font-weight: 700;
				line-height: 43px;
				transform: translateY(-50%);
				position: absolute;
				left: 22px;
				top: 50%;
			}

			.main-timeline .timeline-icon {
				color: #fff;
				font-size: 50px;
				font-weight: 600;
				text-align: center;
				line-height: 50px;
				width: 120px;
				transform: translateY(-50%);
				position: absolute;
				left: 140px;
				top: 50%;
			}

			.main-timeline .title {
				font-size: 23px;
				font-weight: 500;
				text-transform: capitalize;
				margin: 0 0 7px;
			}

			.main-timeline .description {
				font-size: 14px;
				line-height: 20px;
				letter-spacing: 0.5px;
				margin: 0;
			}

			.main-timeline .timeline:nth-child(even) {
				margin: 0 5px 25px 0;
				float: left;
			}

				.main-timeline .timeline:nth-child(even) .timeline-content {
					padding: 15px 280px 15px 20px;
				}

					.main-timeline .timeline:nth-child(even) .timeline-content:before {
						left: auto;
						right: 139px;
					}

				.main-timeline .timeline:nth-child(even) .timeline-year {
					left: auto;
					right: 19px;
				}

				.main-timeline .timeline:nth-child(even) .timeline-icon {
					left: auto;
					right: 139px;
				}

			.main-timeline .timeline:nth-child(4n+2) .timeline-content:before {
				background-color: #FF3E7D;
			}

			.main-timeline .timeline:nth-child(4n+2) .timeline-year {
				color: #FF3E7D;
			}

			.main-timeline .timeline:nth-child(4n+3) .timeline-content:before {
				background-color: #7338BA;
			}

			.main-timeline .timeline:nth-child(4n+3) .timeline-year {
				color: #7338BA;
			}

			.main-timeline .timeline:nth-child(4n+4) .timeline-content:before {
				background-color: #FF9800;
			}

			.main-timeline .timeline:nth-child(4n+4) .timeline-year {
				color: #FF9800;
			}

		.buttonA {
			display: inline-block;
			font-size: 20px;
			width: 45px;
			height: 45px;
			background-color: black;
			border: 0;
			outline: none;
			border-radius: 50%;
			color: white;
			font-weight: 600;
			cursor: pointer;
			transition: all .3s ease;
			-webkit-transition: all .3s ease;
			-moz-transition: all .3s ease;
		}

			.buttonA:hover {
				background-color: black;
				color: red;
			}

		.inputTang {
			display: inline-block;
			width: 300px;
			margin: 0px 20px;
			padding: 10px 20px;
			border-radius: 4px;
			border: 0;
			outline: none;
			border: 2px solid black;
		}
	</style>
</head>
<link rel="stylesheet" href="~/css/detailsBill.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/pixeden-stroke-7-icon@1.2.3/pe-icon-7-stroke/dist/pe-icon-7-stroke.min.css">
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
<div class="container-fluid padding-bottom-3x mb-1" style="margin-top: 3%;">
	<div class="card mb-3">
		<div class="p-4 text-center text-white text-lg bg-dark rounded-top"><span class="text-uppercase">MÃ	ĐƠN HÀNG:  </span><span class="text-medium" style="padding-left:1%;"> @Model.First().BillCode</span></div>
		<div class="d-flex flex-wrap flex-sm-nowrap justify-content-between py-3 px-2 bg-secondary">
			<div class="w-100 text-center py-1 px-2" style="display:none;"><span class="text-medium">Shipped Via:</span> UPS Ground</div>
			<div class="w-100 text-center py-1 px-2" style="font-weight:bold;"><span class="text-medium">Trạng thái:</span> @statusText</div>
			<div class="w-100 text-center py-1 px-2" style="font-weight:bold;">
				<img src="~/image/icons8-date-25.png" alt="Date" /><span class="text-medium" style="padding-left:1%;">Ngày nhận hàng dự kiến:</span>
				@if (status != 4)
				{
					<p id="deliveryDateBill">@Model.First().OrderStatuses.First()?.SuccessDate.ToString("dd/MM/yyyy")</p>
				}
				else
				{
					<p>Không có</p>
				}
			</div>
		</div>
		<div class="card-body">
			<div class="steps d-flex flex-wrap flex-sm-nowrap justify-content-between padding-top-2x padding-bottom-1x">
				@if (status == 0) // Trạng thái chờ xác nhận
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã xác nhận thông tin thanh toán</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đang vận chuyển</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã nhận được hàng</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 1)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đang vận chuyển</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã nhận được hàng</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 2)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed DeliveryDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title">Đang vận chuyển</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().DeliveryDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Đã nhận được hàng</h3>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 3)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed DeliveryDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title">Đang vận chuyển</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().DeliveryDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed SuccessDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title">Đã nhận được hàng</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().SuccessDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}

				@if (status == 4)
				{
					<div style="text-align:center; margin-left:25%;">
						<img src="~/image/cancel-order-8091835-6506585.png" style="max-width:55%;" />
						<h4 style="color:red;">Đã hủy đơn hàng</h4>
						<p>vào @Model.First().OrderStatuses.First().CancelDate.ToString("HH:mm, dd/MM/yyyy")</p>
						<p style="margin-top:1%;">Lý do: <strong>@billStatusHis.First(c => c.StatusName == 4).Note</strong></p>
					</div>
				}

				@if (status == 5)
				{
					<div class="step completed CreateDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="pe-7s-cart"></i></div>
						</div>
						<h3 class="step-title">Đơn hàng đã đặt</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().CreateDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed ConfirmationDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-credit-card"></i></div>
						</div>
						<h3 class="step-title">Đã xác nhận thông tin thanh toán</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().ConfirmationDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed DeliveryDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-truck"></i></div>
						</div>
						<h3 class="step-title">Đang vận chuyển</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().DeliveryDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step completed SuccessDate">
						<div class="step-icon-wrap">
							<div class="step-icon"><i class="fa fa-check-circle-o"></i></div>
						</div>
						<h3 class="step-title">Đã nhận được hàng</h3>
						<h4 class="step-title">@Model.First().OrderStatuses.First().SuccessDate.ToString("HH:mm, dd/MM/yyyy")</h4>
					</div>
					<div class="step notcompleted">
						<div class="step-icon-wrap">
							<div class="step-icon" style="border:3px solid gray; background-color: whitesmoke; color: gray;"><i class="pe-7s-home"></i></div>
						</div>
						<h3 class="step-title" style="display:none;">Hoàn trả</h3>
					</div>
				}
			</div>
			@if (userName != null && status == 0)
			{
				<a class="main-btn success-btn square-btn btn-hover show-modal" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;" data-toggle="modal" data-target="#myModal">Xác nhận</a>
				<a href="#" class="main-btn danger-btn square-btn btn-hover show-modal-cancel" style="font-size:16px; padding:5px 10px; margin:2px;" data-toggle="modal" data-target="#myModal">Hủy đơn</a>
			}
			@if (userName != null && status == 1)
			{
				<a class="main-btn success-btn square-btn btn-hover show-modal-delivery" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;" data-toggle="modal" data-target="#myModal">Giao hàng</a>
				<a href="#" class="main-btn danger-btn square-btn btn-hover show-modal-cancel" style="font-size:16px; padding:5px 10px; margin:2px;" data-toggle="modal" data-target="#myModal">Hủy đơn</a>
			}
			@if (userName != null && status == 2)
			{
				@if (Model.First().IsPaid == true)
				{
					<a class="main-btn success-btn square-btn btn-hover show-modal-success" style="font-size:16px; padding:5px 10px; margin:2px;" data-toggle="modal" data-target="#myModal">Hoàn thành</a>
				}
			}
			@if (status == 0 || status == 1 || status == 2 || status == 3 || status == 4 || status == 5)
			{
				<a class="main-btn active-btn square-btn btn-hover show-modal-details" style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-right:5%;">Chi tiết</a>
			}
			@if (userName == null && Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay" && status == 0)
			{
				<a class="main-btn light-btn-outline btn-hover show-modal-cancel" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;" data-toggle="modal" data-target="#myModal">Hủy đơn hàng</a>
			}
			@if (userName == null && Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay" && status == 1)
			{
				<a class="main-btn light-btn-outline btn-hover show-modal-cancel" style="font-size:16px; padding:5px 10px; margin:2px; margin-left: 5%;" data-toggle="modal" data-target="#myModal">Hủy đơn hàng</a>
			}
		</div>
	</div>
	<div class="d-flex flex-wrap flex-md-nowrap justify-content-center justify-content-sm-between align-items-center">
		<div class="text-left text-sm-right" style="display:none;"><a class="btn btn-outline-primary btn-rounded btn-sm" href="orderDetails" data-toggle="modal" data-target="#orderDetails">View Order Details</a></div>
	</div>
</div>
<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="myModal" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form>
						<h3 class="title">Xác nhận đơn hàng</h3>
						<div class="form-group">
							<label>Ghi chú</label>
							<input type="text" name="ghiChu" class="form-control">
							<input id="idBill" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						</div>
						<button class="btn" type="submit">Xác nhận</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="myModal1" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form>
						<h3 class="title">Xác nhận giao hàng</h3>
						<div class="form-group">
							<label>Ghi chú</label>
							<input type="text" name="ghiChu1" class="form-control">
							<input id="idBill1" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						</div>
						<button class="btn" type="submit">Xác nhận</button>
					</form>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade" id="myModal2" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form>
						<h3 class="title">Xác nhận hoàn thành</h3>
						<div class="form-group">
							<label>Ghi chú</label>
							<input type="text" name="ghiChu2" class="form-control">
							<input id="idBill2" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						</div>
						<button class="btn" type="submit">Xác nhận</button>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="modal-box1">
	<!-- Modal -->
	<div class="modal fade" id="myModalConfirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content clearfix">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
				<form>
					<div class="modal-body">
						<h3 class="title">Xác nhận thanh toán</h3>
						<input id="idBillSuccess" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						<p class="description">Xác nhận thanh toán cho đơn hàng [@Model.First().BillCode] + số tiền [@totalAll.ToString("N0")đ] bằng hình thức thanh toán:</p>
						<button class="btn" type="submit" value="Thanh toán khi nhận hàng" name="httt">Trực tiếp</button>
						<button class="btn cancel" type="submit" value="Thanh toán trực tuyến VNPay" name="httt">Online</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="myModalDetails" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
	<div class="modal-dialog modal-xl" role="document">
		<div class="container">
			<div class="row">
				<div class="col-md-12" style="background-color:white; border-radius:3px;">
					<div class="main-timeline" style="margin-top:3%;">
						@foreach (var item in billStatusHis.OrderBy(c => c.ChangeDate))
						{
							<div class="timeline">
								<a href="#" class="timeline-content">
									<div class="timeline-year">
										@item.ChangeDate.ToString("HH:mm:ss")<br>
										@item.ChangeDate.ToString("dd/MM/yyyy")
									</div>
									@if (item.StatusName == 0)
									{
										<div class="timeline-icon"><i class="fa fa-shopping-cart"></i></div>
									}
									@if (item.StatusName == 1)
									{
										<div class="timeline-icon"><i class="fa fa-credit-card"></i></div>
									}
									@if (item.StatusName == 2)
									{
										<div class="timeline-icon"><i class="fa fa-truck"></i></div>
									}
									@if (item.StatusName == 3)
									{
										<div class="timeline-icon"><i class="fa fa-check-square-o"></i></div>
									}
									@if (item.StatusName == 4)
									{
										<div class="timeline-icon"><i class="fa fa-times-circle-o"></i></div>
									}
									@if (item.StatusName == 5)
									{
										<div class="timeline-icon"><i class="fa fa-pencil-square-o"></i></div>
									}

									@if (item.StatusName == 0)
									{
										<h3 class="title">Người dùng đặt hàng</h3>
									}
									@if (item.StatusName == 1)
									{
										<h3 class="title">Đã xác thực thông tin đơn hàng</h3>
									}
									@if (item.StatusName == 2)
									{
										<h3 class="title">Đơn hàng đang trên đường giao đến bạn</h3>
									}
									@if (item.StatusName == 3)
									{
										<h3 class="title">Đã nhận được hàng</h3>
									}
									@if (item.StatusName == 4)
									{
										<h3 class="title">Đơn hàng đã hủy</h3>
									}
									@if (item.StatusName == 5)
									{
										<h3 class="title">Cập nhật đơn hàng</h3>
									}
									<p class="description">
										Ghi chú: @item.Note
									</p>
									@if (item.StatusName != 0)
									{
										<h5>Nhân viên xác nhận: @item.EmployeeName</h5>
									}
								</a>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="modal-box1">
	<!-- Modal -->
	<div class="modal fade" id="myModalCancel" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog" role="document">
			<div class="modal-content clearfix">
				<button type="button" class="close quay-lai" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
				<form class="formCancel">
					<div class="modal-body">
						<h3 class="title">Xác nhận hủy đơn hàng</h3>
						<input id="idBillSuccess" type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;">
						<p class="description">Bạn chắc chắn muốn hủy đơn hàng [@Model.First().BillCode] + số tiền [@totalAll.ToString("N0")đ]:</p>
						<label class="description">Lý do hủy đơn:</label>
						<input type="text" name="ghiChuHuy" class="form-control" required />
						<input type="text" id="idBillHuy" class="form-control" value="@Model.First().BillID" style="display:none;" />
						<div style="margin-top:2%;">
							<button class="btn cancel quay-lai">Quay lại</button>
							<button class="btn" type="submit">Xác nhận</button>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>

<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="modalShowListAddress" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog modal-md" role="document">
			<div class="modal-content">
				<button type="button" class="close quay-lai" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					@{
						// Chọn địa chỉ mặc định từ Model
						var defaultAddress = Model.First().AddressViewModels != null && Model.First().AddressViewModels.Any() ? Model.First().AddressViewModels.FirstOrDefault() : null;
					}
					<div class="card-header py-3">
						<h5 class="mb-0">Địa chỉ nhận hàng</h5>
					</div>
					@foreach (var item in Model.First().AddressViewModels)
					{
						<div class="card-body existing-address" id="existingAddress_@item.AddressID" data-isdefault="@item.IsDefaultAddress.ToString()" data-shipping-cost="@item.ShippingCost" data-id-huyen="@item.DistrictId" data-id-xa="@item.WardCode data" data-shipping-id="@item.ShippingMethodID">
							<p style="display:none;" id="addressIDShow" class="addressId-show">@item.AddressID</p>
							<p style="font-weight:bold; font-size:17px; color:red;">@item.FullNameCus</p>
							<p style="font-weight:bold;">@item.PhoneNumber</p>
							<p style="font-weight:bold;">@item.Street, @item.Ward, @item.District, @item.Province</p>
							<p style="display:none;" id="displayShipping" class="shipping-cost">@item.ShippingCost</p>
							<p style="display:none;" id="districtIdShow" class="district-idShow">@item.DistrictId</p>
							<p style="display:none;" id="wardCodeShow" class="ward-codeShow">@item.WardCode</p>
							<p style="display:none;" id="shippingMethodIDShow" class="shipping-methodId">@item.ShippingMethodID</p>
							<div>
								<div>
									<label id="deliveryDateLabel2"><span id="deliveryDateSpan" class="delivery-date"></span></label>
								</div>
							</div>
							<div class="btn-list">
								<label class="cl-checkbox">
									<input type="checkbox" id="cbx_@item.AddressID" class="hidden-xs-up quay-lai" onclick="setDefaultAddress('@item.AddressID');" style="padding-top:3%;">
									<span>Đặt làm mặc định</span>
								</label>
							</div>
							<hr>
						</div>
					}
					<a class="main-btn success-btn square-btn btn-hover add-info" style="font-size:16px; padding:5px 10px; margin:2px;">Thêm mới</a>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="modalAddAddress" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog modal-xl" role="document">
			<div class="modal-content">
				<button type="button" class="close quay-lai" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<h3 class="title">Thêm địa chỉ mới</h3>
					<form method="post" action="@Url.Action("AddAddress", "Cart")">
						<div class="form-floating mb-3">
							<input type="text" class="form-control" name="nameUser" placeholder="Họ và tên" required>
							<label for="floatingInputEmail">Họ và tên</label>
						</div>
						<div class="form-floating mb-3">
							<input type="text" class="form-control" name="phoneNumber" placeholder="Số điện thoại" required>
							<label for="floatingInputEmail">Số điện thoại</label>
						</div>
						<div class="row mb-4">
							<div class="col">
								<div class="form-floating mb-3">
									<select class="form-control" id="ListTinh" onchange="updateProvinceValue(this); fetchDistricts(this.value)">
										<option value="" disabled selected>Chọn tỉnh / thành</option>
									</select>
									<label for="floatingInputEmail">Tỉnh/Thành Phố</label>
								</div>
								<input type="hidden" id="ProvinceName" name="provinceName" />
							</div>
							<div class="col">
								<div class="form-floating mb-3">
									<select class="form-control" id="ListQuanHuyen" onchange="updateDistrictValue(this); updateDistrictAndFetchWards()">
										<option value="" disabled selected>Chọn quận / huyện</option>
									</select>
									<label for="floatingInputEmail">Quận/Huyện</label>
								</div>
								<input type="hidden" id="DistrictName" name="districtName" />
							</div>
							<div class="col">
								<div class="form-floating mb-3">
									<select class="form-control" id="ListPhuongXa" onchange="updateWardValue(this); calculateShippingFee(this.value, document.getElementById('ListQuanHuyen').value)">
										<option value="" disabled selected>Chọn xã / phường</option>
									</select>
									<label for="floatingInputEmail">Xã/Phường</label>
								</div>
								<input type="hidden" id="WardName" name="wardName" />
							</div>
							<input style="display:none;" id="shippingCost" name="ShippingCost" />
							<input style="display:none;" id="districtIDCus" name="DistrictID" />
							<input style="display:none;" id="wardCodeCus" name="WardCode" />
							<input style="display:none;" id="shippingMethodID" name="ShippingMethodID" />
						</div>
						<div class="form-floating mb-3">
							<input type="text" class="form-control" name="street" placeholder="Địa chỉ" required>
							<label for="floatingInputEmail">Địa chỉ cụ thể (Số nhà, đường):</label>
						</div>
						<button class="main-btn dark-btn-outline btn-hover btn-add-diachi" type="button" style="font-size:16px; padding:5px 10px; margin:2px;">
							Thêm
						</button>
						<div style="padding-right: 300px; display:none;" id="shippingOptionsDiv">
							<label class="radio-button" style="font-size: 14px; display: inline;">
								<input type="radio" name="example-radio" value="option1">
								<span class="radio"></span>
							</label>

							<label class="radio-button" style="font-size: 14px; display:none;">
								<input type="radio" name="example-radio" value="option2">
								<span class="radio"></span>
							</label>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="modalUpdateProduct" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog modal-xl" role="document">
			<div class="modal-content">
				<button id="close-btn" type="button" class="close quay-lai" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<form class="formUpdateItem">
						<div class="row">
							<div class="col-lg-3 col-md-8 mb-4 mb-lg-0">
								<!-- Image -->
								<div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
									<img src="" class="w-80" alt="Blue Jeans Jacket" />
									<a href="#!">
										<div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
									</a>
								</div>
								<!-- Image -->
							</div>
							<div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
								<!-- Data -->
								<p><strong style="font-size:20px;"></strong></p>
								<p style="font-size:15px; padding-top:1%;"></p>
								<p style="font-size:15px; padding-top:1%;"></p>
								<p style="font-size:15px; padding-top:1%;"></p>
								<p class="price" style="font-size:15px; padding-top:1%; color:red;"></p>
							</div>
							<hr style="width:96%;" />
							<div class="container" style="margin-left:12%;">
								<button type="button" id="minus" class="buttonA">-</button>
								<input id="quantityInput" class="inputTang" type="number" name="quanity" value="@Model.First().Products.First().Quantity" min="1" max="10" data-productid="" data-price="" data-size="">
								<button type="button" id="plus" class="buttonA">+</button>
							</div>
							<label class="description" style="text-align:center; margin-top:4%; font-size:18px; font-weight:bold;">Ghi chú:</label>
							<input type="text" name="ghiChuUpdateSP" class="form-control" required />
							<input type="text" id="idShoesDT" name="idShoesDT" class="form-control" value="@Model.First().Products.First().ProductID" style="display:none;" />
							<input type="text" id="idSize" name="idSize" class="form-control" value="@Model.First().Products.First().Size" style="display:none;" />
							<input type="text" name="idBill" class="form-control" value="@Model.First().BillID" style="display:none;" />
							<button type="button" class="main-btn success-btn square-btn btn-hover btn-updateItem" style="font-size:16px; padding:5px 10px; margin:2px; width:20%; float:left; margin-top:2%;" data-productid="" data-size="">Xác nhận</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="modalAddProduct" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog modal-xl" role="document" style="max-width:70%; width:70%;">
			<div class="modal-content">
				<button id="close-btn" type="button" class="close quay-lai-addproduct" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<div class="row">
						<!-- Phần bên trái (col-md-3) để hiển thị các checkbox lọc -->
						<section id="sidebar" class="col-md-3">
							<div class="border-bottom pb-2 ml-2">
								<h4 id="burgundy">Bộ lọc</h4>
							</div>
							<form asp-controller="Home" asp-action="ListProduct1" method="post" id="myForm">
								<div class="py-2 border-bottom ml-3" style="margin-top: 25px;">
									<h6 class="font-weight-bold">Giới tính</h6>
									<div id="orange"><span class="fa fa-minus"></span></div>
									<div class="form-group">
										<input type="checkbox" name="genders" id="male" value="Nam">
										<label for="male" id="male">Nam</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="genders" id="female" value="Nữ">
										<label for="female" id="female">Nữ</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="genders" id="unisex" value="Unisex">
										<label for="unisex" id="unisex">Unisex</label>
									</div>
								</div>


								<div class="py-2 ml-3 bottom ml-3" style="margin-top: 25px;">
									<h6 class="font-weight-bold">Khoảng giá</h6>
									<div id="orange"><span class="fa fa-minus"></span></div>
									<div class="form-group">
										<input type="checkbox" id="price1" name="minPrice" value="0,1000000">
										<label for="price1">Dưới 1.000.000đ</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="price2" name="minPrice" value="1001000,2700000">
										<label for="price2">1.001.00đ-2.700.000</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="price3" name="minPrice" value="2701000,3999000">
										<label for="price3">2.701.000-3.999.000</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="price4" name="minPrice" value="4000000">
										<label for="price4">Trên 4.000.000đ</label>
									</div>
								</div>


								<hr>
								<div class="py-2 ml-3 bottom ml-3" style="margin-top: 25px;">
									<h6 class="font-weight-bold">Thương hiệu</h6>
									<div id="orange"><span class="fa fa-minus"></span></div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="nike" value="nike">
										<label for="nike">Nike</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="jordan" value="jordan">
										<label for="jordan">Jordan</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="mlb" value="mlb">
										<label for="mlb">MLB</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="adidas" value="adidas">
										<label for="adidas">Adidas</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="reebok" value="reebok">
										<label for="reebok">Reebok</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="vans" value="vans">
										<label for="vans">Vans</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="converse" value="converse">
										<label for="converse">Converse</label>
									</div>
									<div class="form-group">
										<input type="checkbox" name="brands" id="puma" value="puma">
										<label for="puma">Puma</label>
									</div>
								</div>
								<hr>
								<div class="py-2 ml-3 bottom ml-3" style="margin-top: 25px;">
									<h6 class="font-weight-bold">Phong cách</h6>
									<div id="orange"><span class="fa fa-minus"></span></div>
									<div class="form-group">
										<input type="checkbox" id="name1" name="styles" value="walking">
										<label for="name1">Walking</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="name2" name="styles" value="training">
										<label for="name3">Training & Gym</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="name3" name="styles" value="basketball">
										<label for="name4">Basketball</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="name4" name="styles" value="golf">
										<label for="name7">Golf</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="name5" name="styles" value="tennis">
										<label for="name8">Tennis</label>
									</div>
									<div class="form-group">
										<input type="checkbox" id="name6" name="styles" value="athletic">
										<label for="name9">Athletic</label>
									</div>
								</div>
								<hr>
								<div class="py-2 ml-3 bottom ml-3" style="margin-top: 25px;">
									<h6 class="font-weight-bold">Màu sắc</h6>
									<div id="orange">
										<span class="fa fa-minus"></span>
									</div>
									<div class="" style="float: left;">
										<button type="button" id="redBtn" name="colors" value="red" class="color-button color-red" style="background-color: rgb(205, 9, 9); width: 25px; height: 25px; border-radius: 50%; border: none;"></button>
										<p style="font-size: 11px; padding-left: 5px;">Đỏ</p>
										<input type="checkbox" id="redChk" name="colors" value="red" />
									</div>
									<div class="" style="float: left; padding-left: 10px;">
										<button type="button" id="blackBtn" name="colors" value="black" class="color-button color-black" style="background-color: black; width: 25px; height: 25px; border-radius: 50%; border: none; "></button>
										<p style="font-size: 11px; padding-left: 5px;">Đen</p>
										<input type="checkbox" id="blackChk" name="colors" value="black" />
									</div>
									<div class="" style="float: left; padding-left: 10px;">
										<button type="button" id="yellowBtn" name="colors" value="yellow" class="color-button color-orange" style="background-color: yellow; width: 25px; height: 25px; border-radius: 50%; border: none; "></button>
										<p style="font-size: 11px; padding-left: 5px;">Vàng</p>
										<input type="checkbox" id="yellowChk" name="colors" value="yellow" />
									</div>
									<div class="" style="float: left; padding-left: 10px;">
										<button type="button" id="pinkBtn" name="colors" value="pink" class="color-button color-violet" style="background-color: pink; width: 25px; height: 25px; border-radius: 50%; border: none; "></button>
										<p style="font-size: 11px; padding-left: 5px;">Hồng</p>
										<input type="checkbox" id="pinkChk" name="colors" value="pink" />
									</div>
									<br>
									<div class="" style="float: right; padding-top: 15px; padding-right: 69px;">
										<button type="button" id="greenBtn" name="colors" value="green" class="color-button color-green" style="background-color: green; width: 25px; height: 25px; border-radius: 50%; border: none; "></button>
										<p style="font-size: 11px; padding-left: 5px;">Xanh</p>
										<input type="checkbox" id="greenChk" name="colors" value="green" />
									</div>
									<div class="" style="float: right; padding-right: 7px; padding-top: 15px">
										<button type="button" id="whiteBtn" name="colors" value="white" class="color-button color-white" style="background-color: white; width: 25px; height: 25px; border-radius: 50%; border: 1px solid rgb(120, 117, 117); "></button>
										<p style="font-size: 11px; padding-left: 5px;">Trắng</p>
										<input type="checkbox" id="whiteChk" name="colors" value="white" />
									</div>
									<div class="" style="float: right; padding-right: 8px; padding-top: 15px">
										<button type="button" id="orangeBtn" name="colors" value="orange" class="color-button color-orange" style="width: 25px; height: 25px; background-color: rgb(255, 85, 23); border-radius: 50%; border: 1px solid rgb(120, 117, 117); "></button>
										<p style="font-size: 11px; padding-left: 5px;">Cam</p>
										<input type="checkbox" id="orangeChk" name="colors" value="orange" />
									</div>
									<div class="" style="float: right; padding-right: 9px; padding-top: 15px">
										<button type="button" id="brownBtn" name="colors" value="brown" class="color-button color-brown" style="width: 25px; height: 25px; background-color: brown; border-radius: 50%; border: 1px solid rgb(120, 117, 117); "></button>
										<p style="font-size: 11px; padding-left: 5px;">Nâu</p>
										<input type="checkbox" id="brownChk" name="colors" value="brown" />
									</div>
								</div>
							</form>
						</section>
						<section id="products" class="col-md-9">
							<div class="container mt-4 d-flex justify-content-center" style="padding-top: 15px;">
								<div class="row g-0">
									@foreach (var item in shoesDetails)
									{
										<div class="col-sm-6 col-md-4" style="padding-top: 5px;">
											<div class="cards">
												<div class="first bg-white p-4 text-center">
													<!-- Thêm data-id để lưu ShoesDetailsId -->
													<a href="#" id="product-link" class="product-link" data-toggle="modal" data-target="#modalDetailsProduct" data-id="@item.ShoesDetailsId">
														<img src="@Url.Content("~/image/" + item.ImageUrl)" style="width: 100%;">
													</a>
													<h5 class="line1" style="padding-top:5px;">@ViewBag.NameSP[item.ShoesDetailsId]</h5>
													<p class="line1">@ViewBag.NameStyle[item.ShoesDetailsId]</p>
													<p style="font-size: 13px;">@item.Price.ToString("N0")đ</p>
												</div>
											</div>
										</div>
									}
								</div>
							</div>
						</section>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	$(document).ready(function () {
		$(".product-link").on("click", function (e) {
			e.preventDefault();

			// Lấy ShoesDetailsId từ thuộc tính data-id
			var shoesDetailsId = $(this).data("id");

			// Gọi phương thức DetailsProduct sử dụng AJAX
			$.ajax({
				url: '@Url.Action("DetailsProduct", "Bill")',
				type: 'GET',
				data: { id: shoesDetailsId },
				success: function (data) {
					// Cập nhật nội dung modal với dữ liệu nhận được
					updateModalContent(data);

					// Mở modal
					$("#modalAddProduct").modal("hide");
					$("#modalDetailsProduct").modal("show");
				},
				error: function () {
					// Xử lý lỗi nếu cần
				}
			});
		});

		// Hàm cập nhật nội dung modal với dữ liệu chi tiết sản phẩm
		function updateModalContent(data) {
			console.log('sssss', data.nameproduct);
			// Lấy các phần tử trong modal dựa trên id
			const modalContent = document.querySelector('.details-product');
			const nameProductElement = modalContent.querySelector('.nameDetails');
			const styleProductElement = modalContent.querySelector('.styleDetails');
			const imageGolden1Element = modalContent.querySelector('.image1');
			const priceElement = modalContent.querySelector('.priceDetails');

			// Cập nhật nội dung của các phần tử dựa trên dữ liệu nhận được từ server
			nameProductElement.textContent = data.nameproduct;
			styleProductElement.textContent = data.styleproduct;
			imageGolden1Element.src = "/image/" + data.imagegolden1;
			priceElement.textContent = data.price.toLocaleString('vi-VN') + "đ";
		}
	});
</script>
<div class="modal-box">
	<!-- Modal -->
	<div class="modal fade" id="modalDetailsProduct" data-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
		<div class="modal-dialog modal-xl" role="document" style="max-width:70%; width:70%;">
			<div class="modal-content details-product">
				<button id="close-btn" type="button" class="close quay-lai-addproduct" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">×</span>
				</button>
				<div class="modal-body">
					<div class="container mt-4 d-flex justify-content-center" style="padding-top: 45px;">
						<div class="row g-0">
							<!-- src="image/anh11.png" -->
							<div class="col-12 col-sm-12 col-md-7 col-lg-7">
								<div class="product">
									<div class="product-small-img d-none d-sm-none d-md-none d-lg-none d-xl-block">
										<img src="" alt="Product Image" class="img-fluid image1" style="width: 100%;">
									</div>
								</div>
							</div>
							<!-- src="image/video1.mp4" -->
							<div class="col-12 col-sm-12 col-md-5 col-lg-5">
								<div class="product p-6 p-md-5">
									<div class="mt-4 mb-3">
										<span class="text-uppercase text-muted brand" style="font-size: 11px;">
											Thông tin sản phẩm
										</span>
										<h5 class="text-uppercase nameDetails" style="padding-top: 5px;"></h5>
										<!-- Nike SuperRep Cycle 2 Next Nature -->
										<!-- Indoor Cycling Shoes -->
										<p class="styleDetails" style="padding-top: 5px; font-weight:bold;">Kiểu dáng: </p>
										<p class="priceDetails" style="font-size: 14px; padding-top: 5px; font-weight:bold;">Giá:</p>
										<p class="quanityDetals" style="font-size: 14px; padding-top: 5px;">Sản phẩm có sẵn: <span style="font-weight:bold;" id="quantity"></span></p>
										<p style="font-size: 14px; padding-top: 5px;">Chiều dài chân phù hợp: <span style="font-weight:bold;" id="result"></span></p>
									</div>
									<h6 class="text-uppercase" style="font-size: 12px;">Select Size</h6>
									<div class="cart mt-4 align-items-center">
										<form method="post" action="">
											<div class="label1" style="padding-top: 5px;">
												<label class="radio">
													<input type="radio" name="size" value="34" checked> <span class="span1">34</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="35"> <span class="span1">35</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="36"> <span class="span1">36</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="37"> <span class="span2">37</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="38"> <span class="span2">38</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="39"> <span class="span2">39</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="40"> <span class="span3">40</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="41"> <span class="span3">41</span>
												</label>
												<label class="radio">
													<input type="radio" name="size" value="42"> <span class="span3">42</span>
												</label>
											</div>
											<button type="submit" id="addToCartButton" class="btn btn-danger text mr-2 px-4" style="width: 79%; border-radius: 10px; color: white; margin-top:10px;">Add to bill</button>
										</form>
										<script>
											document.addEventListener("DOMContentLoaded", function () {
												// Lấy tất cả các thẻ a có class "product-link"
												const modalUpdateProduct = document.getElementById('product-link');
												const shoesId = $(modalUpdateProduct).attr('data-id');
												// Lấy danh sách radio button theo tên "size"
												const sizeRadios = document.getElementsByName("size");
												// Lựa chọn size mặc định (ví dụ: size đầu tiên)
												const defaultSize = sizeRadios[0].value;

												// Gọi hàm để cập nhật thông tin số lượng và chiều dài chân ngay khi trang được load
												updateQuantityAndFootLength(defaultSize);

												// Lắng nghe sự kiện click trên radio button
												for (let i = 0; i < sizeRadios.length; i++) {
													sizeRadios[i].addEventListener("click", function () {
														const selectedSize = this.value;
														// Gọi hàm để cập nhật thông tin số lượng và chiều dài chân dựa trên size đã chọn
														console.log('sddsdds', shoesId);
														updateQuantityAndFootLength(selectedSize, shoesId);
													});
												}
											});

											function updateQuantityAndFootLength(size, shoesDetailsId) {
												const quantitySpan = document.getElementById('quantity');
												const addToCartButton = document.getElementById('addToCartButton');
												// Gửi yêu cầu Ajax để lấy số lượng và chiều dài chân dựa trên kích thước và ShoesDetailsId
												$.get('@Url.Action("GetQuantityForSize", "Home")', { shoesDetailsId: shoesDetailsId, sizeForm: size }, function (data) {
													// Cập nhật nội dung của quantitySpan bằng số lượng tồn từ phản hồi.
													quantitySpan.textContent = data.quantity;
													const soluong = data.quantity;
													if (soluong <= 0) {
														addToCartButton.disabled = true;
														addToCartButton.textContent = "Hết hàng";
													} else {
														addToCartButton.disabled = false;
														addToCartButton.textContent = "Add To Cart";
													}

													const result = document.getElementById("result");
													result.textContent = getFootLength(size) + " cm";
												});
											}

											function getFootLength(size) {
												const footLengths = {
													"34": 21.5,
													"35": 22,
													"36": 23,
													"37": 23.5,
													"38": 24,
													"39": 25,
													"40": 25.5,
													"41": 26,
													"42": 27,
												};
												return footLengths[size] || "Không rõ";
											}
										</script>
									</div>
									<div class="chu1">
										<hr style="width:77%;" />
										<h5 onclick="toggleDescription()" style="width:77%;">Thông tin chi tiết sản phẩm <img src="~/image/icons8-chevron-down-11.png" style="float:right; padding-top:5px;" id="imgMoTa" /></h5>
										<p class="about" style="font-size: 13px; margin-top: 5px; text-align: justify; display:none; width:77%;" id="description">
											<strong>Mô tả:</strong><br />
											<div class="additional-info">
												<strong>🎀 Đặc tính nổi bật:</strong>
												<ul>
													<li>Kháng nước nhẹ khi đi mưa</li>
													<li>Đế và lót được khâu toàn bộ tránh bung keo</li>
													<li>Nhiều phiên bản màu sắc</li>
													<li>Thích hợp sử dụng với nhiều hoạt động thể thao, vui chơi,...</li>
												</ul>
												<strong>🎀 Hướng dẫn sử dụng:</strong>
												<ul>
													<li>Bảo quản nơi khô ráo tránh ẩm mốc sản phẩm</li>
													<li>Không giặt giày với nước nhiệt độ cao</li>
													<li>Khuyến cáo sử dụng thêm sản phẩm vệ sinh giày của shop để tăng tuổi thọ cho sản phẩm</li>
												</ul>
												<strong>🎀 Cách tìm mua sản phẩm @ViewBag.nameProduct:</strong> Vào ô tìm kiếm của Shop gõ từ khóa "@ViewBag.nameProduct". <br />
												<strong>🎀 Hotline:</strong> 0766900008
											</div>
										</p>
									</div>
									<script>
										function toggleDescription() {
											var description = document.getElementById("description");
											var img = document.getElementById("imgMoTa");
											if (description.style.display === "none") {
												description.style.display = "block";
												img.src = "/image/icons8-chevron-up-11.png";
											} else {
												description.style.display = "none";
												img.src = "/image/icons8-chevron-down-11.png";
											}
										}
									</script>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	$(document).ready(function () {
		$('.btn-add-product').click(function () {
			$('#modalAddProduct').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.quay-lai-addproduct').click(function () {
			$('#modalAddProduct').modal('hide');
		});
	});
</script>
<script>
	window.addEventListener('load', function () {
		var idBill = '@Model.First().BillID.ToString()';
		const updateButtons = document.querySelectorAll('.btn-updateProduct');
		const quantityInput = document.getElementById('quantityInput');
		const quantityInputs = document.querySelectorAll('.inputTang');
		const plusButton = document.getElementById('plus');
		const minusButton = document.getElementById('minus');
		const closeForm = document.getElementById('close-btn');
		const modalUpdateProduct = document.getElementById('modalUpdateProduct');
		//lấy id địa chỉ
		var selectedCheckbox = document.querySelector('.existing-address[data-isdefault="True"]');
		const selectedDistrictId = selectedCheckbox ? parseFloat(selectedCheckbox.closest('.existing-address').dataset.idHuyen) : parseInt(document.getElementById('ListQuanHuyen').value);
		const selectedWardCode = selectedCheckbox ? parseFloat(selectedCheckbox.closest('.existing-address').dataset.idXa) : parseInt(document.getElementById('ListPhuongXa').value);
		calculateShippingFee(selectedWardCode, selectedDistrictId);

		setTimeout(function () {
			var phivanchuyenElement1 = document.getElementById('phivanchuyen');
			var shippingCostString1 = phivanchuyenElement1.textContent;
			var match1 = shippingCostString1.match(/([\d,.]+)/);
			var phivanchuyen1 = match1 ? parseFloat(match1[1].replace(/[,.]/g, '')) : 0;
			updatePriceShippingInBill(idBill, phivanchuyen1);
		}, 300);

		// Khởi tạo tổng tiền của cả giỏ hàng
		let totalPrice = 0;
		updateButtons.forEach(button => {
			button.addEventListener('click', function () {
				// Lấy thông tin sản phẩm từ thuộc tính data
				const productId = button.dataset.productid;
				const imageUrl = button.dataset.image;
				const name = button.dataset.name;
				const description = button.dataset.description;
				const size = button.dataset.size;
				const quantity = button.dataset.quantity;
				const price = parseFloat(button.dataset.price);  // Chuyển đổi giá về kiểu số (nếu chưa là kiểu số)
				const formattedPrice = new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(price);
				// Gọi hàm để hiển thị thông tin sản phẩm trong modal
				showProductModal(productId, imageUrl, name, description, size, quantity, formattedPrice);
			});
		});

		function showProductModal(productId, imageUrl, name, description, size, quantity, formattedPrice) {
			// Sử dụng thông tin sản phẩm để cập nhật nội dung modal
			const modalProductImage = modalUpdateProduct.querySelector('.bg-image img');
			const modalProductName = modalUpdateProduct.querySelector('.modal-body p strong');
			const modalProductDescription = modalUpdateProduct.querySelector('.modal-body p:nth-child(2)');
			const modalProductSize = modalUpdateProduct.querySelector('.modal-body p:nth-child(3)');
			const modalProductQuantity = modalUpdateProduct.querySelector('.modal-body p:nth-child(4)');
			const modalProductPrice = modalUpdateProduct.querySelector('.modal-body p:nth-child(5)');
			const inputElement = modalUpdateProduct.querySelector('input[name="quanity"]');

			modalProductImage.src = "/image/" + imageUrl;
			modalProductName.textContent = name;
			modalProductDescription.textContent = description;
			modalProductSize.textContent = "Size: " + size;
			modalProductQuantity.textContent = "Số lượng: x" + quantity;
			modalProductPrice.textContent = formattedPrice;
			inputElement.value = quantity;
			// Gán giá trị từ dataset của nút cho các thuộc tính data- của các phần tử trong modal
			$(modalUpdateProduct).attr('data-productid', productId);
			$(modalUpdateProduct).attr('data-size', size);
			const numericPriceString = formattedPrice.replace(/[^\d]/g, '');
			const numericPrice = parseFloat(numericPriceString);
			$(modalUpdateProduct).attr('data-price', numericPrice);
			// Hiển thị modal
			$(modalUpdateProduct).modal('show');
		}

		plusButton.addEventListener('click', function () {
			// Tăng giá trị số lượng và cập nhật vào ô input
			quantityInput.value = Math.min(parseInt(quantityInput.value, 10) + 1, 10);
		});

		// Thêm sự kiện click cho nút "minus"
		minusButton.addEventListener('click', function () {
			// Giảm giá trị số lượng và cập nhật vào ô input
			quantityInput.value = Math.max(parseInt(quantityInput.value, 10) - 1, 1);
		});

		closeForm.addEventListener('click', function () {
			$('#modalUpdateProduct').modal('hide');
		});

		quantityInputs.forEach(input => {
			input.addEventListener('change', function () {
				const shoesDetailsId = $(modalUpdateProduct).attr('data-productid');
				const sizeId = $(modalUpdateProduct).attr('data-size');
				const price = $(modalUpdateProduct).attr('data-price');
				const quantity = parseInt(input.value);
				// Cập nhật giá tiền tương ứng
				const total = price * quantity;
				const totalElement = document.querySelector(`.priceTotalItem[data-shoesdetailsid="${shoesDetailsId}"][data-size="${sizeId}"]`);
				totalElement.textContent = total.toLocaleString() + "đ";

				// Lấy tất cả các phần tử có class 'priceTotalItem'
				const totalElements = document.querySelectorAll('.priceTotalItem');

				// Khởi tạo tổng giá trị
				let totalPrice = 0;

				// Lặp qua tất cả các phần tử để tính tổng giá trị
				totalElements.forEach(element => {
					// Lấy giá trị textContent từ phần tử
					const priceText = element.textContent;

					// Chuyển đổi giá trị text thành số (loại bỏ ký tự không phải số)
					const price = parseFloat(priceText.replace(/[^\d]/g, ''));

					// Tính tổng giá trị từ giá và số lượng
					totalPrice += price;
				});

				// Cập nhật tổng tiền cả giỏ hàng
				const totalPriceElement = document.getElementById('totalPrice');
				totalPriceElement.textContent = totalPrice.toLocaleString() + "đ";

				calculateShippingFee(selectedWardCode, selectedDistrictId);
				var phivanchuyenElement = document.getElementById('phivanchuyen');
				var shippingCostString = phivanchuyenElement.textContent;
				var match = shippingCostString.match(/([\d,.]+)/);
				var phivanchuyen = match ? parseFloat(match[1].replace(/[,.]/g, '')) : 0;
				console.log('okkdkd', phivanchuyen);

				var totalOk = totalPrice + phivanchuyen;
				console.log('okkdkd', totalOk);

				var tongTienElement = document.querySelector('[name="TongTienAfterDiscount"]');
				tongTienElement.innerText = totalOk.toLocaleString('vi-VN') + "đ";
			});
		});

		const submitForm = document.querySelectorAll('.btn-updateItem');
		// Bắt sự kiện click trên nút "Thêm"
		submitForm.forEach(buttonSub => {
			buttonSub.addEventListener('click', function (e) {
				e.preventDefault(); // Ngăn chặn hành động mặc định của nút submit
				var idBill = '@Model.First().BillID.ToString()';
				const idShoesDT = $(modalUpdateProduct).attr('data-productid');
				const idSize = $(modalUpdateProduct).attr('data-size');
				var ghiChuUpdateSP = $('input[name="ghiChuUpdateSP"]').val();
				var quanity = document.getElementById('quantityInput').value;
				var phivanchuyenElement = document.getElementById('phivanchuyen');
				var shippingCostString = phivanchuyenElement.textContent;
				var match = shippingCostString.match(/([\d,.]+)/);
				var phivanchuyen = match ? parseFloat(match[1].replace(/[,.]/g, '')) : 0;
				//lấy giá giảm voucher
				var priceVoucherElement = document.getElementById('giamgia');
				var priceVoucherText = priceVoucherElement.innerText;
				var priceVoucher = parseInt(priceVoucherText.replace(/[^\d]/g, ''));
				// Gửi dữ liệu lên server sử dụng Ajax
				$.ajax({
					url: '@Url.Action("UpdateQuantityItem", "BillStatusHistory")',
					type: 'POST',
					data: {
						idBill: idBill,
						idShoesDT: idShoesDT,
						idSize: idSize,
						ghiChuUpdateSP: ghiChuUpdateSP,
						quanity: quanity,
						phivanchuyen: phivanchuyen
					},
					success: function (response) {
						$('#modalUpdateProduct').modal('hide');
						updatePriceShippingInBill(idBill, phivanchuyen, priceVoucher);
						location.reload();
					},
					error: function (error) {
						// Xử lý lỗi nếu cần
					}
				});
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.add-info').click(function () {
			$('#modalAddAddress').modal('show');
			$('#modalShowListAddress').modal('hide');
		});
	});

	$(document).ready(function () {
		$('.quay-lai').click(function () {
			$('#modalAddAddress').modal('hide');
		});
	});

	$(document).ready(function () {
		// Bắt sự kiện click trên nút "Thêm"
		$('.btn-add-diachi').click(function (e) {
			e.preventDefault(); // Ngăn chặn hành động mặc định của nút submit

			// Lấy giá trị từ các trường input và select
			var nameUser = $('input[name="nameUser"]').val();
			var phoneNumber = $('input[name="phoneNumber"]').val();
			var provinceName = $('input[name="provinceName"]').val();
			var districtName = $('input[name="districtName"]').val();
			var wardName = $('input[name="wardName"]').val();
			var street = $('input[name="street"]').val();
			var shippingCostHTML = $('input[name="ShippingCost"]').val();
			var shippingCost = parseFloat(shippingCostHTML);
			var districtID = $('input[name="DistrictID"]').val();
			var wardCode = $('input[name="WardCode"]').val();
			var shippingMethodID = $('input[name="ShippingMethodID"]').val();
			var idCustomer = '@Model.First().CustomerId.ToString()';
			var idBill = '@Model.First().BillID.ToString()';

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("AddAddressFronDetailsBill", "Cart")',
				type: 'POST',
				data: {
					nameUser: nameUser,
					phoneNumber: phoneNumber,
					provinceName: provinceName,
					districtName: districtName,
					wardName: wardName,
					street: street,
					ShippingCost: shippingCost,
					DistrictID: districtID,
					WardCode: wardCode,
					ShippingMethodID: shippingMethodID,
					idCustomer: idCustomer,
					idBill: idBill
				},
				success: function (response) {
					$('#modalAddAddress').modal('hide');
					location.reload();
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.btn-change-info').click(function () {
			$('#modalShowListAddress').modal('show');
		});
	});

	$(document).ready(function () {
		$('.quay-lai').click(function () {
			$('#modalShowListAddress').modal('hide');
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal-cancel').click(function () {
			$('#myModalCancel').modal('show');
		});
	});

	$(document).ready(function () {
		$('.quay-lai').click(function () {
			$('#myModalCancel').modal('hide');
		});
	});

	// Bắt sự kiện submit form
	$('.formCancel').submit(function (e) {
		e.preventDefault();

		var ghiChu = $('input[name="ghiChuHuy"]').val();
		var idBill = $('#idBillHuy').val();

		// Gửi dữ liệu lên server sử dụng Ajax
		$.ajax({
			url: '@Url.Action("CancelOrder", "BillStatusHistory")',
			type: 'POST',
			data: { ghiChu: ghiChu, idBill: idBill },
			success: function (response) {
				// Xử lý kết quả từ server
				if (response.success) {
					// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
					$('#myModal').modal('hide');
					location.reload();
				} else {
					// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
					alert(response.message);
				}
			},
			error: function (error) {
				// Xử lý lỗi nếu cần
			}
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal-details').click(function () {
			$('#myModalDetails').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModalDetails').modal('hide');
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.xac-nhan-tt').click(function () {
			$('#myModalConfirm').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModalConfirm').modal('hide');
		});

		var selectedPaymentMethod = ''; // Biến để lưu trữ giá trị của button được chọn

		// Bắt sự kiện click trên các button
		$('.btn').click(function () {
			selectedPaymentMethod = $(this).val(); // Lưu giá trị của button được chọn
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();
			var idBill = $('#idBillSuccess').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveSuccessBill", "BillStatusHistory")',
				type: 'POST',
				data: { idBill: idBill, httt: selectedPaymentMethod },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModalConfirm').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
					}
				},
				error: function (error) {
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal').click(function () {
			$('#myModal').modal('show');
		});

		// Đóng modal khi click nút "non numquam" hoặc nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModal').modal('hide');
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();

			var ghiChu = $('input[name="ghiChu"]').val();
			var idBill = $('#idBill').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveStatusBill", "BillStatusHistory")',
				type: 'POST',
				data: { ghiChu: ghiChu, idBill: idBill },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModal').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
						alert(response.message);
					}
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal-delivery').click(function () {
			$('#myModal1').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModal1').modal('hide');
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();

			var ghiChu = $('input[name="ghiChu1"]').val();
			var idBill = $('#idBill1').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveStatusBill1", "BillStatusHistory")',
				type: 'POST',
				data: { ghiChu: ghiChu, idBill: idBill },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModal1').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
						alert(response.message);
					}
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<script>
	$(document).ready(function () {
		$('.show-modal-success').click(function () {
			$('#myModal2').modal('show');
		});

		// Đóng modal khi click nút x (close)
		$('.close-modal, .modal .close').click(function () {
			$('#myModal2').modal('hide');
		});

		// Bắt sự kiện submit form
		$('form').submit(function (e) {
			e.preventDefault();

			var ghiChu = $('input[name="ghiChu2"]').val();
			var idBill = $('#idBill2').val();

			// Gửi dữ liệu lên server sử dụng Ajax
			$.ajax({
				url: '@Url.Action("SaveStatusBill2", "BillStatusHistory")',
				type: 'POST',
				data: { ghiChu: ghiChu, idBill: idBill },
				success: function (response) {
					// Xử lý kết quả từ server
					if (response.success) {
						// Nếu thành công, đóng modal và thực hiện các bước khác nếu cần
						$('#myModal2').modal('hide');
						location.reload();
					} else {
						// Nếu thất bại, hiển thị thông báo lỗi hoặc xử lý khác
						alert(response.message);
					}
				},
				error: function (error) {
					// Xử lý lỗi nếu cần
				}
			});
		});
	});
</script>
<div class="container col-md-12">
	<div class="card mb-7" style="border: 1px solid white;">
		<div class="card-header py-3">
			<h5 class="mb-0">Sản phẩm</h5>
			@if (userName != null)
			{
				<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn dark-btn rounded-full btn-hover btn-add-product">Thêm sản phẩm</a>
			}
		</div>
		<div class="card-body">
			<!-- Single item -->
			@foreach (var item in Model)
			{
				<div class="row">
					<div class="col-lg-3 col-md-8 mb-4 mb-lg-0">
						<!-- Image -->
						<div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
							<img src="@Url.Content("~/image/" + item.Products.First().ImageUrl)" class="w-80" alt="Blue Jeans Jacket" />
							<a href="#!">
								<div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
							</a>
						</div>
						<!-- Image -->
					</div>
					<div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
						<!-- Data -->
						<p><strong style="font-size:20px;">@item.Products.First().Name</strong></p>
						<p style="font-size:15px; padding-top:1%;">@item.Products.First().Description</p>
						<p style="font-size:15px; padding-top:1%;">Size: @item.Products.First().Size</p>
						<p style="font-size:15px; padding-top:1%;">Số lượng: x@(item.Products.First().Quantity)</p>
						<p style="font-size:15px; padding-top:1%; color:red;">@string.Format("{0:N0}đ", item.PriceProduct)</p>
						@if (userName != null && status == 0 || status == 1)
						{
							<button type="button" id="BtnUpdate_@item.Products.First().ProductID"
							class="btn btn-primary btn-updateProduct"
							data-productid="@item.Products.First().ProductID"
							data-image="@item.Products.First().ImageUrl"
							data-name="@item.Products.First().Name"
							data-description="@item.Products.First().Description"
							data-size="@item.Products.First().Size"
							data-quantity="@item.Products.First().Quantity"
							data-price="@item.PriceProduct"
							style="background-color:black; border:1px solid white;">
								<i class="fa fa-pencil" style="padding-top:1%; font-size:15px;"></i>
							</button>

							<button type="button" class="btn btn-primary" style="background-color:black; border:1px solid white;">
								<i class="fa fa-trash" style="padding-top:1%; font-size:15px;"></i>
							</button>
						}
					</div>
					<div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
						<!-- Total Price -->
						<p class="text-start text-md-center">
							@{
								var priceTotalItem = item.PriceProduct * item.Products.First().Quantity;
							}
							<span class="main-btn info-btn btn-hover priceTotalItem" style="font-size:18px; padding:5px 10px; margin:2px; margin-top: 45%;" data-shoesdetailsid="@item.Products.First().ProductID" data-size="@item.Products.First().Size">@string.Format("{0:N0}đ", priceTotalItem)</span>
						</p>
						<!-- Total Price -->
					</div>
					<hr class="my-4" style="width:98%;" />
				</div>
			}

			<div style="text-align: right;">
				<table class="table table-borderless">
					<thead>
						<tr>
							<th scope="col">Tổng sản phẩm:</th>
							<th scope="col"><span class="cart-total-sub" id="totalPrice" style="padding: 5px 10px; margin: 2px; margin-left: 5%;">@totalPrice.ToString("N0")đ</span></th>
						</tr>

						<tr>
							<th scope="col">Phí vận chuyển:</th>
							<th scope="col"><span id="phivanchuyen" style="padding: 5px 10px; margin: 2px; margin-left: 8%;">+ @shippingCost.ToString("N0")đ</span></th>
						</tr>

						<tr>
							<th scope="col">Giảm giá:</th>
							<th scope="col">
								@if (Model.First().PriceVoucher != null)
								{
									<span id="giamgia" style="padding: 5px 10px; margin: 2px; margin-left: 10%;">- @string.Format("{0:N0}đ", priceVoucher)</span>
								}
								else
								{
									<span id="giamgia" style="padding: 5px 10px; margin: 2px; margin-left: 10%;">0đ</span>
								}
							</th>
						</tr>

						<tr>
							<th scope="col">Tổng: </th>
							<th scope="col"><span class="cart-total-sub" id="totalPriceAfterDiscount" name="TongTienAfterDiscount" style="padding: 5px 10px; margin: 2px; margin-left: 12%;">= @totalAll.ToString("N0")đ</span></th>
						</tr>
					</thead>
				</table>
			</div>
		</div>
	</div>
	<div class="row" id="shipping-address-form-container" style="margin-top:5%;">
		<div class="container col-md-12 mb-6">
			<div class="card mb-6">
				<div class="card-header py-3">
					<h5 class="mb-0">THÔNG TIN ĐƠN HÀNG</h5>
					@if (userName != null && Model.First().IsPaid == false && status != 4)
					{
						<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn secondary-btn rounded-full btn-hover xac-nhan-tt" data-toggle="modal" data-target="#myModal">Xác nhận thanh toán</a>
					}

					@if (Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay" && userName != null && status == 0 || status == 1)
					{
						<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn dark-btn rounded-full btn-hover btn-change-info">Thay đổi thông tin</a>
					}

					@if (userName == null && status != 4)
					{
						@if (@Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay" && status != 3)
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn secondary-btn rounded-full btn-hover thanh-toan">Thanh toán online</a>
						}
						else
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:left; margin-top:1%;" class="main-btn success-btn-light btn-hover">Đơn hàng đã được bạn thanh toán online vào lúc: @Model.First().OrderStatuses.First().PaymentDate.ToString("HH:mm, dd/MM/yyyy"), với số tiền: @totalAll.ToString("N0")đ</a>
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn secondary-btn rounded-full btn-hover">Đã thanh toán</a>
						}
					}
					@if (userName != null && Model.First().IsPaid == true)
					{
						@if (Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay")
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn success-btn-light btn-hover">Đơn hàng đã được thanh toán trực tiếp vào lúc: @Model.First().OrderStatuses.First().PaymentDate.ToString("HH:mm, dd/MM/yyyy"), với số tiền: @totalAll.ToString("N0")đ</a>
						}
						else
						{
							<a style="font-size:16px; padding:5px 10px; margin:2px; float:right; margin-top:-2%;" class="main-btn success-btn-light btn-hover">Đơn hàng đã được thanh toán online vào lúc: @Model.First().OrderStatuses.First().PaymentDate.ToString("HH:mm, dd/MM/yyyy"), với số tiền: @totalAll.ToString("N0")đ</a>
						}
					}
				</div>
				<div class="card-body existing-address" id="existingAddress" style="display:flex;">
					<div style="float:left;">
						<p style="font-size:16px;">Mã đơn hàng: <span style="font-weight:bold; margin-left:16%;"> @Model.First().BillCode</span></p>
						<p style="font-size:16px; padding-top:2%;">Trạng thái: <span style="font-size:16px; padding:5px 10px; margin:2px; margin-left:22%;" class="main-btn secondary-btn rounded-full btn-hover"> @statusText</span> </p>
						@if (@Model.First().PurchaseMethod != "Thanh toán trực tuyến VNPay")
						{
							<p style="font-size:16px; padding-top:2%;">Hình thức thanh toán: <span class="main-btn info-btn rounded-full btn-hover" style="font-size:16px; padding:5px 10px; margin:2px;"> @Model.First().PurchaseMethod</span></p>
						}
						else
						{
							<p style="font-size:16px; padding-top:2%;">Hình thức thanh toán: <span class="main-btn warning-btn rounded-full btn-hover" style="font-size:16px; padding:5px 10px; margin:2px;"> @Model.First().PurchaseMethod</span></p>
						}
					</div>
					<div style="margin-left:5%;">
						<p style="font-size:16px;">Họ và tên: <span style="font-weight:bold; margin-left:9%;"> @Model.First().FullName</span></p>
						<p style="font-size:16px; padding-top:2%;">Số điện thoại: <span style="font-weight:bold; margin-left:4.5%;"> @Model.First().PhoneNumber</span></p>
						<p style="font-size:16px; padding-top:2%;">Email: <span style="font-weight:bold; margin-left:13%;"> @Model.First().Email</span></p>
						<p style="font-size:16px; padding-top:2%;">Địa chỉ nhận hàng: <span style="font-weight:bold;"> @Model.First().Street, @Model.First().Ward, @Model.First().District, @Model.First().Province</span></p>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script>
		var isPageReloaded = localStorage.getItem('isPageReloaded') === 'true';

		function saveStatusBill(billId1) {
			$.ajax({
				url: '@Url.Action("SaveStatusBill", "Bill")',
				type: 'POST',
				data: { billID: billId1 },
				success: function (response) {
					// Xử lý thành công nếu cần
				},
				error: function (xhr, textStatus, errorThrown) {
					// Xử lý lỗi nếu cần
				}
			});
		}

		var urlParams = new URLSearchParams(window.location.search);
		var vnpResponseCode = urlParams.get('vnp_ResponseCode');
		console.log('Trạng thái thanh toán là:', vnpResponseCode);

		// Kiểm tra nếu vnp_ResponseCode là '00' và trang chưa được load lại
		if (vnpResponseCode === '00' && !isPageReloaded) {
			var billID = '@Model.First().BillID.ToString()';
			saveStatusBill(billID);
			alert("Thanh toán thành công");
			// Đặt cờ isPageReloaded thành true để ngăn không cho load lại lần thứ 2
			localStorage.setItem('isPageReloaded', 'true');

			// Nếu có parameter trên URL và vnp_ResponseCode là '00', thì load lại trang sau một khoảng thời gian (ví dụ: 3 giây)
			setTimeout(function () {
				window.location.reload();
			}, 500);
		} else {
			// Nếu không phải trường hợp đặt đơn mới, đặt lại cờ để cho phép load lại khi đặt đơn mới tiếp theo
			localStorage.setItem('isPageReloaded', 'false');
		}

		//cái này bắt sự kiện khi bấm thanh toán online thì sẽ điều hướng đến trang thanh toán vnpay và sau đó là trở lại trang chi tiết đơn hàng
		$(".thanh-toan").on("click", function (event) {
			event.preventDefault();

			var totalPayment = @totalAll;
			var billID = '@Model.First().BillID.ToString()';
			var customerID = '@Model.First().CustomerId.ToString()';

			$.ajax({
				url: "https://localhost:7036/api/payment",
				method: "GET",
				data: { totalPayment: totalPayment, billID: billID, customerID: customerID },
				success: function (data) {
					// Chuyển hướng đến trang thanh toán nếu vnp_ResponseCode không phải '00'
					var urlParams = new URLSearchParams(window.location.search);
					var vnpResponseCode = urlParams.get('vnp_ResponseCode');

					if (vnpResponseCode !== '00') {
						window.location.href = data;
					}
				},
				error: function (error) {
					console.error("Error calling API:", error);
				}
			});
		});

	</script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			// lấy giá tiền gốc
			var idBill = '@Model.First().BillID.ToString()';
			var totalPriceElement = document.getElementById('totalPrice');
			var totalPriceText = totalPriceElement.innerText;
			var totalPrice = parseInt(totalPriceText.replace(/[^\d]/g, ''));

			var phivanchuyenElement = document.getElementById('phivanchuyen');
			var shippingCostString = phivanchuyenElement.textContent;
			var match = shippingCostString.match(/([\d,.]+)/);
			var phivanchuyen = match ? parseFloat(match[1].replace(/[,.]/g, '')) : 0;
			//lấy giá giảm voucher
			var priceVoucherElement = document.getElementById('giamgia');
			var priceVoucherText = priceVoucherElement.innerText;
			var priceVoucher = parseInt(priceVoucherText.replace(/[^\d]/g, ''));
			// hiển thị tổng giá tiền khi trang đc load
			var totalOk = (totalPrice + phivanchuyen) - priceVoucher;
			var tongTienElement = document.querySelector('[name="TongTienAfterDiscount"]');
			tongTienElement.innerText = "= " + totalOk.toLocaleString('vi-VN') + "đ";
			// Lắng nghe sự kiện change của tất cả các checkbox
			var checkboxes = document.querySelectorAll('.existing-address input[type="checkbox"]');
			checkboxes.forEach(function (checkbox) {
				checkbox.addEventListener('change', function () {
					updatePriceShippingInBill(idBill, phivanchuyen, priceVoucher);
				});
			});
			// Khởi tạo giá tiền vận chuyển khi trang được tải lần đầu
			updateShippingCost();
		});

		function updateShippingCost() {
			var totalPriceElement = document.getElementById('totalPrice');
			var totalPriceText = totalPriceElement.innerText;
			var totalPrice = parseInt(totalPriceText.replace(/[^\d]/g, ''));
			//lấy giá ship
			var phivanchuyenElement = document.getElementById('phivanchuyen');
			var shippingCostString = phivanchuyenElement.textContent;
			var match = shippingCostString.match(/([\d,.]+)/);
			var phivanchuyen = match ? parseFloat(match[1].replace(/[,.]/g, '')) : 0;
			//lấy giá giảm voucher
			var priceVoucherElement = document.getElementById('giamgia');
			var priceVoucherText = priceVoucherElement.innerText;
			var priceVoucher = parseInt(priceVoucherText.replace(/[^\d]/g, ''));
			// Tìm checkbox được chọn
			var selectedCheckbox = document.querySelector('.existing-address[data-isdefault="True"]');
			if (selectedCheckbox) {
				var wardCode = parseFloat(selectedCheckbox.closest('.existing-address').dataset.idXa);
				var idDistrict = parseFloat(selectedCheckbox.closest('.existing-address').dataset.idHuyen);
				calculateShippingFee(wardCode, idDistrict);

				// tính tổng tiền khi ng dùng đổi checkbox
				var totalOk = totalPrice + phivanchuyen - priceVoucher;
				var tongTienElement = document.querySelector('[name="TongTienAfterDiscount"]');
				tongTienElement.innerText = "= " + totalOk.toLocaleString('vi-VN') + "đ";
			}
		}
	</script>
	<script>
		// Thiết lập địa chỉ mặc định từ Razor Model
		var selectedAddressId = '@(defaultAddress?.AddressID.ToString() ?? "")';
		var idCus = '@Model.First().CustomerId.ToString()';
		var idBill = '@Model.First().BillID.ToString()';
		$('.btn-change-info').click(function () {
			// Thực hiện ajax request để lấy thông tin địa chỉ mặc định từ server
			$.ajax({
				url: '@Url.Action("GetDefaultAddress", "Address")',
				type: 'GET',
				data: { idCus: idCus },
				success: function (response) {
					// Chọn checkbox mặc định
					var defaultCheckbox = document.getElementById('cbx_' + response.addressId);
					if (defaultCheckbox) {
						defaultCheckbox.checked = true;
						lastCheckedCheckbox = defaultCheckbox;
					}
				},
				error: function (xhr, textStatus, errorThrown) {
					// Xử lý lỗi (nếu có)
					console.error('Error:', errorThrown);
				}
			});
		});

		// Biến để lưu trữ trạng thái của checkbox
		var lastCheckedCheckbox = null;
		function setDefaultAddress(addressId) {
			// Lấy checkbox tương ứng với địa chỉ được chọn
			var selectedCheckbox = document.getElementById('cbx_' + addressId);
			var isCheckboxChecked = selectedCheckbox.checked;

			// Nếu checkbox đã được chọn trước đó, bỏ chọn nó
			if (lastCheckedCheckbox !== null && lastCheckedCheckbox !== selectedCheckbox) {
				lastCheckedCheckbox.checked = false;
			}

			// Chọn checkbox tương ứng với địa chỉ được chọn
			selectedCheckbox.checked = true;

			// Lưu trạng thái của checkbox hiện tại
			lastCheckedCheckbox = selectedCheckbox;

			// Thiết lập giá trị cho biến selectedAddressId
			selectedAddressId = addressId;
			//
			$.ajax({
				url: '@Url.Action("SetDefaultAddressModal", "Address")',
				type: 'POST',
				data: { addressId: addressId, idCus: idCus, idBill: idBill },
				success: function (response) {
					location.reload();
				},
				error: function (xhr, textStatus, errorThrown) {
					// Xử lý lỗi (nếu có)
					console.error('Error:', errorThrown);
				}
			});
		}

		function updatePriceShippingInBill(billId, shippingCost, priceVoucher) {
			$.ajax({
				url: '@Url.Action("UpdatePriceShippingInBill", "Address")',
				type: 'POST',
				data: { billId: billId, shippingCost: shippingCost, priceVoucher: priceVoucher },
				success: function (response) {
					// Xử lý thành công nếu cần
				},
				error: function (xhr, textStatus, errorThrown) {
					// Xử lý lỗi nếu cần
				}
			});
		}
	</script>

	<script>
		// Sử dụng sự kiện change để theo dõi sự thay đổi trong selection chọn xã
		const phuongXaSelect = document.getElementById('ListPhuongXa');
		phuongXaSelect.addEventListener('change', function () {
			// Kiểm tra xem xã đã được chọn hay chưa
			const selectedXa = phuongXaSelect.value;
			const shippingOptionsDiv = document.getElementById('shippingOptionsDiv');

			if (selectedXa) {
				// Nếu đã chọn xã, hiển thị radio button
				shippingOptionsDiv.style.display = 'block';
			} else {
				// Nếu xã chưa được chọn, ẩn radio button
				shippingOptionsDiv.style.display = 'none';
			}
		});
	</script>
	<script>
		function updateDistrictAndFetchWards() {
			const selectedDistrict = document.getElementById('ListQuanHuyen').value;
			fetchWards(selectedDistrict);
			calculateShippingFee(document.getElementById('ListPhuongXa').value, selectedDistrict);
		}
	</script>
	<script>
		// Function to fetch province data from API and populate the select element
		function fetchProvinces() {
			// API endpoint URL
			const apiUrl = "https://online-gateway.ghn.vn/shiip/public-api/master-data/province";
			// Token
			const token = "6092d580-fde7-11ed-a967-deea53ba3605";
			// Create headers for the request
			const headers = {
				"Content-Type": "application/json",
				token: token
			};
			// Send GET request to the API
			fetch(apiUrl, {
				method: "GET",
				headers: headers
			})
				.then(response => response.json())
				.then(data => {
					// Process the response data
					if (data && data.data) {
						const provinces = data.data;

						// Get the select element
						const selectElement = document.getElementById("ListTinh");

						// Create and append option elements for each province
						provinces.forEach(province => {
							const option = document.createElement("option");
							option.value = province.ProvinceID;
							option.textContent = province.ProvinceName;
							selectElement.appendChild(option);
						});
					}
				})
				.catch(error => {
					console.error("Error fetching provinces:", error);
				});
		}
		// Update hidden input value when a province is selected
		function updateProvinceValue(selectElement) {
			const provinceName = selectElement.options[selectElement.selectedIndex].text;
			document.getElementById("ProvinceName").value = provinceName;
		}
		// Call the fetchProvinces function to populate the select box
		fetchProvinces();
	</script>
	<script>
		function fetchDistricts(province_id) {
			const districtSelect = document.getElementById('ListQuanHuyen');
			// Clear existing options
			districtSelect.innerHTML = '<option value="" disabled selected>Chọn quận / huyện</option>';
			// Set districtID after creating options
			var districtID = document.getElementById('districtID');

			const url = `https://online-gateway.ghn.vn/shiip/public-api/master-data/district?province_id=${province_id}`;
			const token = '6092d580-fde7-11ed-a967-deea53ba3605';

			fetch(url, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'token': token
				}
			})
				.then(response => response.json())
				.then(data => {
					// Add districts to the dropdown list
					data.data.forEach(district => {
						const option = document.createElement('option');
						option.value = district.DistrictID;
						option.textContent = district.DistrictName;
						districtSelect.appendChild(option);
					});
					// Trigger change event to update wards
					districtSelect.dispatchEvent(new Event('change'));
				})
				.catch(error => console.log(error));
		}
		// Update hidden input value when a province is selected
		function updateDistrictValue(selectElement) {
			const districtName = selectElement.options[selectElement.selectedIndex].text;
			const districtId = selectElement.value;
			document.getElementById("DistrictName").value = districtName;
			document.getElementById("districtIDCus").value = districtId;
		}
		fetchDistricts();
	</script>
	<script>
		function fetchWards(district_id) {
			const wardSelect = document.getElementById('ListPhuongXa');
			// Clear existing options
			wardSelect.innerHTML = '<option value="" disabled selected>Chọn xã / phường</option>';

			const url = `https://online-gateway.ghn.vn/shiip/public-api/master-data/ward?district_id=${district_id}`;
			const token = '6092d580-fde7-11ed-a967-deea53ba3605';

			fetch(url, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'token': token
				}
			})
				.then(response => response.json())
				.then(data => {
					// Add wards to the dropdown list
					data.data.forEach(ward => {
						const option = document.createElement('option');
						option.value = ward.WardCode;
						option.textContent = ward.WardName;
						wardSelect.appendChild(option);
					});
					// Trigger change event to update shipping fee
					wardSelect.dispatchEvent(new Event('change'));
				})
				.catch(error => console.log(error));
		}
		// Update hidden input value when a province is selected
		function updateWardValue(selectElement) {
			const wardName = selectElement.options[selectElement.selectedIndex].text;
			const wardCode = selectElement.value;
			document.getElementById("WardName").value = wardName;
			document.getElementById("wardCodeCus").value = wardCode;
		}
	</script>
	<script>
		// Hàm để cập nhật hình thức vận chuyển và thời gian dự kiến
		function updateShippingOptions() {
			// Lấy giá trị từ ListQuanHuyen
			var listQuanHuyen = document.getElementById('ListQuanHuyen');
			var selectedOption = listQuanHuyen.options[listQuanHuyen.selectedIndex];
			var toDistrict = selectedOption.value;

			// Nếu không có giá trị mới từ ListQuanHuyen, sử dụng giá trị từ districtIdShow
			if (!toDistrict) {
				toDistrict = parseInt(document.getElementById('districtIdShow').textContent);
			}
			var toHuyen = parseInt(toDistrict);
			// Gọi API để cập nhật hình thức vận chuyển
			fetch(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/available-services?shop_id=4185066&from_district=3440&to_district=${toHuyen}`, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'token': '6092d580-fde7-11ed-a967-deea53ba3605'
				}
			})
				.then(response => response.json())
				.then(data => {
					var shippingMethods = data.data;
					var shippingOptionsDiv = document.getElementById('shippingOptionsDiv');

					// Cập nhật hình thức vận chuyển
					var firstLabel = shippingOptionsDiv.querySelector('.radio-button:nth-child(1)');
					firstLabel.innerHTML = 'Hình thức vận chuyển: ' + shippingMethods[0].short_name;
					firstLabel.style.fontSize = '16px';
					firstLabel.style.fontWeight = 'bold';
					selectedShippingMethodID = shippingMethods[0].service_id;
					console.log('siuuuu', selectedShippingMethodID);
					// Ẩn dòng thứ hai
					var secondLabel = shippingOptionsDiv.querySelector('.radio-button:nth-child(2)');
					secondLabel.style.display = 'none';

					// Hiển thị "shippingOptionsDiv" sau khi có dữ liệu
					shippingOptionsDiv.style.display = 'block';

					// Gọi hàm tính toán ngày nhận hàng dự kiến
					calculateDeliveryDate();
					document.getElementById("shippingMethodID").value = shippingMethods[0].service_id;
				})
				.catch(error => {
					console.error('Error:', error);
				});
		}
		// Sự kiện khi có sự thay đổi ở các textbox chọn địa chỉ hoặc khi trang web được tải lần đầu
		document.getElementById('ListQuanHuyen').addEventListener('change', updateShippingOptions);
		document.getElementById('ListPhuongXa').addEventListener('change', updateShippingOptions);

		// Hàm tính toán ngày nhận hàng dự kiến
		function calculateDeliveryDate() {
			// Gọi hàm getLeadTime() để lấy thời gian dự kiến nhận hàng
			getLeadTime().then(leadTime => {
				if (leadTime !== null) {
					// Thời điểm Epoch (ngày 1 tháng 1 năm 1970) theo múi giờ UTC
					var epochTimeUTC = new Date("1970-01-01T00:00:00Z");

					// Chuyển leadTime thành mili giây và thêm vào thời điểm Epoch theo múi giờ UTC
					var deliveryDateUTC = new Date(epochTimeUTC.getTime() + (leadTime * 1000));

					// Điều chỉnh thời gian dự kiến nhận hàng sang múi giờ Việt Nam (UTC+7)
					var deliveryDateVietnam = new Date(deliveryDateUTC.getTime() + (7 * 60 * 60 * 1000));

					// Trích xuất ngày, tháng và năm từ thời gian dự kiến
					var day = deliveryDateVietnam.getDate();
					var month = deliveryDateVietnam.getMonth() + 1; // Tháng trong JavaScript bắt đầu từ 0, cần cộng thêm 1.
					var year = deliveryDateVietnam.getFullYear();

					// Tạo chuỗi định dạng "dd-mm-yyyy"
					var formattedDate = day + '-' + (month < 10 ? '0' : '') + month + '-' + year;

					var deliveryDateSpanElement = document.querySelector('.existing-address input[type="checkbox"]:checked');
					var deliveryDateSpan = deliveryDateSpanElement ? deliveryDateSpanElement.closest('.existing-address').querySelector('.delivery-date') : null;
					console.log(deliveryDateSpan);
					deliveryDateSpan.innerHTML = 'Ngày nhận hàng dự kiến: ' + formattedDate;
					deliveryDateSpan.style.paddingTop = '10px';
					deliveryDateSpan.style.fontWeight = 'bold';

					//lưu vào db khi thanh toán
					var deliveryDateSaveHTML = document.getElementById('deliveryDateBill');
					deliveryDateSaveHTML.innerHTML = formattedDate;
				}
			});
		}

		// Hàm để lấy thời gian dự kiến nhận hàng
		function getLeadTime() {
			var checkedCheckbox = document.querySelector('.existing-address input[type="checkbox"]:checked');
			var toDistrictIdElement = checkedCheckbox ? checkedCheckbox.closest('.existing-address').querySelector('.district-idShow') : null;
			var toDistrictId = parseFloat(toDistrictIdElement.textContent);
			console.log('Id huyen', toDistrictId);

			var toWardCodeElement = checkedCheckbox ? checkedCheckbox.closest('.existing-address').querySelector('.ward-codeShow') : null;
			var toWardCode = parseFloat(toWardCodeElement.textContent);
			console.log('Id xa', toWardCode);
			;
			var toMethodShipIdElement = checkedCheckbox ? checkedCheckbox.closest('.existing-address').querySelector('.shipping-methodId') : null;
			var methodId = parseFloat(toMethodShipIdElement.textContent);
			console.log('Id ship', methodId);
			return fetch(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/leadtime?from_district_id=3440&from_ward_code=13010&to_district_id=${toDistrictId}&to_ward_code=${toWardCode}&service_id=${methodId}`, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'token': '6092d580-fde7-11ed-a967-deea53ba3605',
					'shop_id': '4185066'
				}
			})
				.then(response => response.json())
				.then(data => {
					console.log(data.data.leadtime);
					return data.data.leadtime;
				})
				.catch(error => {
					console.error('Error:', error);
					return null;
				});
		}
	</script>
	<script>
		let isNewAddressClicked = false;
		$('.add-info').click(function () {
			isNewAddressClicked = true;
		});
		function calculateShippingFee(to_ward_code, to_district_id) {
			var totalPriceElement = document.getElementById('totalPrice');
			var totalPriceText = totalPriceElement.innerText;
			var totalPrice = parseInt(totalPriceText.replace(/[^\d]/g, ''));

			var totalWeight = '@totalWeight';
			var totalWeightSum = parseInt(totalWeight.replace(/[^\d]/g, ''));
			// lấy id hình thức giao từ db
			var selectedCheckbox = document.querySelector('.existing-address[data-isdefault="True"]');
			const ShippingMethodID = selectedCheckbox ? parseFloat(selectedCheckbox.closest('.existing-address').dataset.shippingId) : "0";
			// Xây dựng URL dựa trên việc người dùng có click "Thêm mới" hay không
			const url = isNewAddressClicked
				? `https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee?service_id=${selectedShippingMethodID}&insurance_value=${totalPrice}&coupon&to_ward_code=${to_ward_code}&to_district_id=${to_district_id}&from_district_id=3440&weight=${totalWeightSum}&length=38&width=15&height=15`
				: `https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee?service_id=${ShippingMethodID}&insurance_value=${totalPrice}&coupon&to_ward_code=${to_ward_code}&to_district_id=${to_district_id}&from_district_id=3440&weight=${totalWeightSum}&length=38&width=15&height=15`;
			const token = '6092d580-fde7-11ed-a967-deea53ba3605';
			const shop_id = '4185066';

			fetch(url, {
				method: 'GET',
				headers: {
					'Content-Type': 'application/json',
					'token': token,
					'shop_id': shop_id
				}
			})
				.then(response => response.json())
				.then(data => {
					console.log(data);
					const wardSelect = document.getElementById('phivanchuyen');
					wardSelect.innerHTML = data.data.total.toLocaleString('vi-VN') + "đ";
					// giá trị cho input
					var shippingFee = data.data.total;
					console.log('gia van chuyen', shippingFee);
					document.getElementById('shippingCost').value = shippingFee;
					//
					var totalOk = totalPrice + shippingFee;
					var tongTienElement = document.querySelector('[name="TongTien"]');
					tongTienElement.innerText = totalOk.toLocaleString('vi-VN') + "đ";
				})
				.catch(error => console.log(error));
		}
	</script>
</div>