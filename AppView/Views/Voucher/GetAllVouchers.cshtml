@*@model IEnumerable<AppData.Models.Voucher>
*@
@model IEnumerable<AppView.Models.VoucherViewModel>
@{
    
    ViewData["Title"] = "GetAllVouchers";
    var stt = 1;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <style>
        body {
            color: #566787;
            background: #f5f5f5;
            font-size: 16px;
        }

        .table-responsive {
            margin: 30px 0;
        }

        .table-wrapper {
            min-width: 1000px;
            background: #fff;
            padding: 20px 25px;
            border-radius: 3px;
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
            padding-bottom: 15px;
            background: black;
            color: #fff;
            padding: 16px 30px;
            margin: -20px -25px 10px;
            border-radius: 3px 3px 0 0;
        }

            .table-title h2 {
                margin: 5px 0 0;
                font-size: 24px;
            }

            .table-title .btn {
                color: #566787;
                float: right;
                font-size: 13px;
                background: #fff;
                border: none;
                min-width: 50px;
                border-radius: 2px;
                border: none;
                outline: none !important;
                margin-left: 10px;
            }

                .table-title .btn:hover, .table-title .btn:focus {
                    color: #566787;
                    background: #f2f2f2;
                }

                .table-title .btn i {
                    float: left;
                    font-size: 21px;
                    margin-right: 5px;
                }

                .table-title .btn span {
                    float: left;
                    margin-top: 2px;
                }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
            padding: 12px 15px;
            vertical-align: middle;
        }

            table.table tr th:first-child {
                width: 60px;
            }

            table.table tr th:last-child {
                width: 100px;
            }

        table.table-striped tbody tr:nth-of-type(odd) {
            background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
            background: #f5f5f5;
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table td:last-child i {
            opacity: 0.9;
            font-size: 22px;
            margin: 0 5px;
        }

        table.table td a {
            font-weight: bold;
            color: #566787;
            display: inline-block;
            text-decoration: none;
        }

            table.table td a:hover {
                color: #2196F3;
            }

            table.table td a.settings {
                color: #2196F3;
            }

            table.table td a.delete {
                color: #F44336;
            }

        table.table td i {
            font-size: 19px;
        }

        table.table .avatar {
            border-radius: 50%;
            vertical-align: middle;
            margin-right: 10px;
        }

        .status {
            font-size: 30px;
            margin: 2px 2px 0 0;
            display: inline-block;
            vertical-align: middle;
            line-height: 10px;
        }

        .text-success {
            color: #10c469;
        }

        .text-info {
            color: #62c9e8;
        }

        .text-warning {
            color: #FFC107;
        }

        .text-danger {
            color: #ff5b5b;
        }

        .pagination {
            float: right;
            margin: 0 0 5px;
        }

            .pagination li a {
                border: none;
                font-size: 13px;
                min-width: 30px;
                min-height: 30px;
                color: #999;
                margin: 0 2px;
                line-height: 30px;
                border-radius: 2px !important;
                text-align: center;
                padding: 0 6px;
            }

                .pagination li a:hover {
                    color: #666;
                }

            .pagination li.active a, .pagination li.active a.page-link {
                background: #03A9F4;
            }

                .pagination li.active a:hover {
                    background: #0397d6;
                }

            .pagination li.disabled i {
                color: #ccc;
            }

            .pagination li i {
                font-size: 16px;
                padding-top: 6px
            }

        .hint-text {
            float: left;
            margin-top: 10px;
            font-size: 13px;
        }

        .form {
            --width-of-input: 200px;
            --border-height: 1px;
            --border-before-color: rgba(221, 221, 221, 0.39);
            --border-after-color: #5891ff;
            --input-hovered-color: #4985e01f;
            position: relative;
            width: var(--width-of-input);
        }
        /* styling of Input */
        .input {
            color: black;
            font-size: 0.9rem;
            background-color: transparent;
            width: 100%;
            box-sizing: border-box;
            padding-inline: 0.5em;
            padding-block: 0.7em;
            border: none;
            border-bottom: var(--border-height) solid var(--border-before-color);
        }
        /* styling of animated border */
        .input-border {
            position: absolute;
            background: var(--border-after-color);
            width: 0%;
            height: 2px;
            bottom: 0;
            left: 0;
            transition: 0.3s;
        }
        /* Hover on Input */
        input:hover {
            background: var(--input-hovered-color);
        }

        input:focus {
            outline: none;
        }
            /* here is code of animated border */
            input:focus ~ .input-border {
                width: 100%;
            }
        /* === if you want to do animated border on typing === */
        /* remove input:focus code and uncomment below code */
        /* input:valid ~ .input-border{
                  width: 100%;
                } */

        .unlock {
            color: gray; /* Màu xám hoặc màu khác bạn muốn sử dụng */
            text-decoration: none; /* Loại bỏ gạch chân (nếu muốn) */
        }

            .unlock:hover {
                /* Bạn có thể tùy chỉnh màu khi di chuột qua nếu cần */
                color: darkgray; /* Màu khi di chuột qua */
            }

        /* Style for the search and date inputs */
        .row {
            margin-bottom: 15px;
        }

        .col {
            display: flex;
            align-items: center;
        }



        .input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        input[type="date"] {
            width: calc(100% - 12px); /* Adjust the width to leave room for the label */
            padding: 8px; /* Adjust padding for a cleaner look */
            margin: 0; /* Remove default margin */
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: content-box; /* Use content-box to include padding and border in the specified width */
        }
        label {
            margin-right: 10px;
        }
        /* Style for the dropdown button */
        .btn-secondary {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 4px;
            cursor: pointer;
        }

            .btn-secondary:hover {
                background-color: #45a049;
            }

        /* Style for the dropdown menu items */
        .dropdown-menu {
            min-width: 100%;
        }

        .dropdown-item {
            color: #333;
            padding: 10px;
            text-decoration: none;
            display: block;
        }

            .dropdown-item:hover {
                background-color: #f2f2f2;
            }



    </style>
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
</head>
<body>
    <div class="container-fluid">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-5">
                            <h2>Danh sách Vouchers</h2>
                        </div>
                        <div class="col-sm-7">
                            <a asp-action="CreateVouchers" class="btn btn-secondary"><i class="material-icons">&#xE147;</i> <span>Add New Vouchers</span></a>
                            @*                        <a href="#" class="btn btn-secondary"><i class="material-icons">&#xE24D;</i> <span>Export to Excel</span></a>*@
                        </div>
                    </div>
                </div>

              
                  
             
                <div class="row" >
                    <div class="col">
                        <form method="get" action="@Url.Action("FindVouchers")">
                            <div class="form">
                                <input class="input" placeholder="Tìm kiếm" required="" type="text" name="searchQuery">
                                <span class="input-border"></span>
                            </div>
                        </form>
                    </div>
                    <div class="col">
                        <label for="startDate">Từ ngày:</label>
                        <input type="date" id="startDate" name="startDate" oninput="filterByDateRange()">
                    </div>
                    <div class="col">
                        <label for="endDate">Đến ngày:</label>
                        <input type="date" id="endDate" name="endDate" oninput="filterByDateRange()">
                    </div>
                    <div class="col">
                        <div class="d-flex justify-content-end" style="margin-left: 280px;">
                            <div class="btn-group" >
                                <button type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Chọn trạng thái
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" href="#" id="tat-ca">Tất cả</a>
                                    <a class="dropdown-item" href="#" id="ket-thuc">Kết thúc</a>
                                    <a class="dropdown-item" href="#" id="dang-dien-ra">Đang diễn ra</a>
                                    <a class="dropdown-item" href="#" id="sap-dien-ra">Sắp diễn ra</a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <table class="table table-striped table-hover" style="margin-top:15px;">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Mã</th>
                            <th>Giá trị</th>
                            <th>Lượt <br /> sử dụng</th>
                            <th>Số lượng</th>
                            <th>Cho đơn <br /> tối thiểu</th>
                            <th style="display:none;">Hạng</th>
                            <th>Ngày tạo</th>
                            <th>Ngày bắt đầu</th>
                            <th>Ngày kết thúc</th>
                            <th>Quyền</th>
                            @* <th>IsDel</th>*@
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderBy(c => c.VoucherCode))
                        {

                                <tr class="voucher-row">
                                                <td>@stt</td>
                                                <td>@Html.DisplayFor(modelItem => item.VoucherCode)</td>
                                <td>@string.Format("{0:#,0.##} VNĐ", item.VoucherValue)</td>
                                    <td>@Html.DisplayFor(modelItem => item.MaxUsage)/@Html.DisplayFor(modelItem => item.RemainingUsage)</td>
                                                <td>@Html.DisplayFor(modelItem => item.RemainingUsage)</td>

                                <td>@string.Format("{0:#,0.##} VNĐ", item.Total)</td>
                                <td style="display:none;">@Html.DisplayFor(modelItem => item.Exclusiveright)</td>
                                               <td>@Html.DisplayFor(modelItem => item.CreateDate)</td>
                                                <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                                              <td>@Html.DisplayFor(modelItem => item.ExpirationDate)</td>
                                    <td>
                                    @if (item.Type == 0)
                                    {
                                                <span>Tất cả</span>
                                    }
                                    else if (item.Type == 1)
                                    {
                                                <span>Tùy chọn</span>
                                    }
                                    </td>

                                                <td>
                                    @if (item.Status == 0)
                                    {
                                                <p><img src="~/image/icons8-connection-status-on-18.png" /> Đang hoạt động</p>
                                    }
                                    else if (item.Status == 2)
                                    {
                                                <p><img src="~/image/icons8-connection-status-off18.png" /> Ngừng hoạt động</p>
                                    }
                                    else if (item.Status == 1)
                                    {
                                                <p style="color: cornflowerblue"><img src="~/image/icons8-connection-status-off18.png"  /> Chưa hoạt động</p>
                                    }

                                        <td>


                                        @if (item.MaxUsage > 0)
                                        {
                <span title="Không thể chỉnh sửa vì đã sử dụng" data-toggle="tooltip">
                    <i class="material-icons" style="color: gray;">edit</i>
                </span>
                                        }
                                        else
                                        {
                <a href="@Url.Action("EditVouchers", new { id = item.VoucherID})" class="settings" title="Settings" data-toggle="tooltip"><i class="material-icons">&#xe3c9;</i></a>
                                        }
                                        @*<a href="@Url.Action("Details", new { id = item.VoucherID})" class="details-btn" title="Details" data-toggle="tooltip"><i class="material-icons">&#xe3c9;</i></a>*@
                                                <a href="@Url.Action("DeleteVouchers", new { id = item.VoucherID})" class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons">&#xe872;</i></a>
                                                <button onclick="window.location='@Url.Action("Details1", new { id = item.VoucherID})'" class="details-btn" title="Details" data-toggle="tooltip"><i class="material-icons">&#xe3c9;</i></button>
                                        @if (item.Status == 0)
                                        {
                                                <a href="@Url.Action("LockVoucher", new { id = item.VoucherID })" class="lock" title="Lock" data-toggle="tooltip"><i class="material-icons">lock</i></a>
                                        }
                                        else if (item.Status == 1)
                                        {
                                                <a href="@Url.Action("UnlockVoucher", new { id = item.VoucherID })" class="unlock" title="Unlock" data-toggle="tooltip"><i class="material-icons">lock_open</i></a>
                                        }


                                                </td>
                                            </tr>
                            stt++;

                        }
                    </tbody>



                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            // Thêm bộ lắng nghe sự kiện sau khi DOM đã được tải hoàn toàn
                            document.getElementById("ket-thuc").addEventListener("click", function () {
                                filterRows("Kết thúc");
                            });

                            document.getElementById("dang-dien-ra").addEventListener("click", function () {
                                filterRows("Đang diễn ra");
                            });

                            document.getElementById("sap-dien-ra").addEventListener("click", function () {
                                filterRows("Sắp diễn ra");
                            });

                            document.getElementById("tat-ca").addEventListener("click", function () {
                                showAllRows();
                            });

                            updateExpiredVouchers();
                        });

                        function filterRows(status) {
                            var rows = document.getElementsByClassName("voucher-row");
                            var currentDate = new Date();

                            for (var i = 0; i < rows.length; i++) {
                                var row = rows[i];
                                var dateCreatedText = row.querySelector("td:nth-child(9)").innerText.trim(); // Giả sử DateCreated ở cột 8
                                var expirationDateText = row.querySelector("td:nth-child(10)").innerText.trim(); // Giả sử ExpirationDate ở cột 6

                                // Chuyển đổi định dạng ngày thời gian thành ngày JavaScript
                                var dateCreated = new Date(dateCreatedText.replace(/(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})/, '$3-$2-$1T$4:$5:$6'));
                                var expirationDate = new Date(expirationDateText.replace(/(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})/, '$3-$2-$1T$4:$5:$6'));

                                var display = "none";

                                switch (status) {
                                    case "Kết thúc":
                                        if (expirationDate < currentDate) {
                                            display = "";
                                        }
                                        break;

                                    case "Đang diễn ra":
                                        if (dateCreated <= currentDate && expirationDate >= currentDate) {
                                            display = "";
                                        }
                                        break;

                                    case "Sắp diễn ra":
                                        if (dateCreated > currentDate) {
                                            display = "";
                                        }
                                        break;

                                    default:
                                        break;
                                }

                                row.style.display = display;
                            }
                        }

                        function updateExpiredVouchers() {
                            var rows = document.getElementsByClassName("voucher-row");
                            var currentDate = new Date();

                            for (var i = 0; i < rows.length; i++) {
                                var row = rows[i];
                                var expirationDateText = row.querySelector("td:nth-child(6)").innerText.trim(); // Giả sử ExpirationDate ở cột 6

                                // Chuyển đổi định dạng ngày thời gian thành ngày JavaScript
                                var expirationDate = new Date(expirationDateText.replace(/(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})/, '$3-$2-$1T$4:$5:$6'));

                                if (expirationDate <= currentDate) {
                                    // Cập nhật trạng thái thành "Kết thúc"
                                    row.querySelector("td:nth-child(9)").innerHTML = '<p><img src="~/image/icons8-connection-status-off18.png" /> Kết thúc</p>';
                                    // Tùy chọn: Ẩn liên kết khóa/mở khóa hoặc cập nhật chúng tương ứng
                                   // row.querySelector(".lock").style.display = "none";
                                    row.querySelector(".unlock").style.display = "none";
                                }
                            }
                        }

                        function showAllRows() {
                            var rows = document.getElementsByClassName("voucher-row");
                            for (var i = 0; i < rows.length; i++) {
                                rows[i].style.display = "";
                            }
                        }
                    </script>
                    <script>
                        function filterByDateRange() {
                            var rows = document.getElementsByClassName("voucher-row");
                            var startDate = new Date(document.getElementById("startDate").value);
                            var endDate = new Date(document.getElementById("endDate").value);

                            for (var i = 0; i < rows.length; i++) {
                                var row = rows[i];
                                var dateCreatedText = row.querySelector("td:nth-child(9)").innerText.trim(); // Giả sử DateCreated ở cột 8
                                var expirationDateText = row.querySelector("td:nth-child(10)").innerText.trim(); // Giả sử ExpirationDate ở cột 6

                                // Chuyển đổi định dạng ngày thời gian thành ngày JavaScript
                                var dateCreated = new Date(dateCreatedText.replace(/(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})/, '$3-$2-$1T$4:$5:$6'));
                                var expirationDate = new Date(expirationDateText.replace(/(\d{2})\/(\d{2})\/(\d{4}) (\d{2}):(\d{2}):(\d{2})/, '$3-$2-$1T$4:$5:$6'));

                                // Compare the dateCreated with the selected date range
                                if (dateCreated >= startDate && expirationDate <= endDate) {
                                    row.style.display = ""; // Show the row if it falls within the selected date range
                                } else {
                                    row.style.display = "none"; // Hide the row otherwise
                                }
                            }
                        }
                    </script>



               

                </table>
                <div class="clearfix">
                    <div class="hint-text">Showing <b>1</b> out of <b>3</b> list</div>
                    <ul class="pagination">
                        <li class="page-item disabled"><a href="#">Previous</a></li>
                        <li class="page-item"><a href="#" class="page-link">1</a></li>
                        <li class="page-item"><a href="#" class="page-link">2</a></li>
                        <li class="page-item active"><a href="#" class="page-link">3</a></li>
                        <li class="page-item"><a href="#" class="page-link">4</a></li>
                        <li class="page-item"><a href="#" class="page-link">5</a></li>
                        <li class="page-item"><a href="#" class="page-link">Next</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

                